openapi: 3.0.0
info:
  title: Xero Accounting API
  version: 9.0.0
  termsOfService: https://developer.xero.com/xero-developer-platform-terms-conditions/
  contact:
    name: Xero Platform Team
    email: api@xero.com
    url: https://developer.xero.com
servers:
  - description: The Xero Accounting API exposes accounting and related functions of the main Xero application and can be used for a variety of purposes such as creating transactions like invoices and credit notes, right through to extracting accounting data via our reports endpoint.
    url: https://api.xero.com/api.xro/2.0
paths:
  /Accounts:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
        type: string
    get:
      security:
        - OAuth2:
            - accounting.settings
            - accounting.settings.read
      tags:
        - Accounting
      operationId: getAccounts
      summary: Retrieves the full chart of accounts
      parameters:
        - $ref: "#/components/parameters/ifModifiedSince"
        - in: query
          name: where
          description: Filter by an any element
          example: Status==&quot;ACTIVE&quot; AND Type==&quot;BANK&quot;
          x-example-csharp: Status==\"ACTIVE\"
          x-example-java: Status==&quot;&apos; + Account.StatusEnum.ACTIVE+ &apos;&quot;
          x-example-php: Status==&quot;&apos; . \XeroAPI\XeroPHP\Models\Accounting\Account::STATUS_ACTIVE . &apos;&quot;
          x-example-ruby: Status==#{XeroRuby::Accounting::Account::ACTIVE}
          schema:
            type: string
        - in: query
          name: order
          description: Order by an any element
          example: Name ASC
          schema:
            type: string
      responses:
        "200":
          description: Success - return response of type Accounts array with 0 to n Account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Accounts"
              example:
                Accounts:
                  - AccountID: ebd06280-af70-4bed-97c6-7451a454ad85
                    Code: "091"
                    Name: Business Savings Account
                    Type: BANK
                    TaxType: NONE
                    EnablePaymentsToAccount: false
                    BankAccountNumber: "0209087654321050"
                    BankAccountType: BANK
                    CurrencyCode: NZD
                  - AccountID: 7d05a53d-613d-4eb2-a2fc-dcb6adb80b80
                    Code: "200"
                    Name: Sales
                    Type: REVENUE
                    TaxType: OUTPUT2
                    Description: Income from any normal business activity
                    EnablePaymentsToAccount: false
    put:
      security:
        - OAuth2:
            - accounting.settings
      tags:
        - Accounting
      operationId: createAccount
      summary: Creates a new chart of accounts
      parameters:
        - $ref: "#/components/parameters/idempotencyKey"
      x-hasAccountingValidationError: true
      x-example:
        - object:
          is_object: true
          key: account
          keyPascal: Account
        - code:
          key: code
          keyPascal: Code
          default: 123456
          object: account
        - name:
          key: name
          keyPascal: Name
          default: FooBar
          object: account
        - type:
          key: type
          keyPascal: Type
          default: EXPENSE
          nonString: true
          php: XeroAPI\XeroPHP\Models\Accounting\AccountType::EXPENSE
          node: AccountType.EXPENSE
          ruby: XeroRuby::Accounting::AccountType::EXPENSE
          python: AccountType.EXPENSE
          java: com.xero.models.accounting.AccountType.EXPENSE
          csharp: AccountType.EXPENSE
          object: account
        - description:
          is_last: true
          key: description
          keyPascal: Description
          default: Hello World
          object: account
      responses:
        "200":
          description: Success - created new Account and return response of type Accounts array with new Account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Accounts"
              example:
                Id: 11814c9d-3b5e-492e-93b0-fad16bf3244f
                Status: OK
                ProviderName: Xero API Partner
                DateTimeUTC: /Date(1550793549392)/
                Accounts:
                  - AccountID: 66b262e2-561e-423e-8937-47d558f13442
                    Code: "123456"
                    Name: Foobar
                    Status: ACTIVE
                    Type: EXPENSE
                    TaxType: INPUT
                    Description: Hello World
                    Class: EXPENSE
                    EnablePaymentsToAccount: false
                    ShowInExpenseClaims: false
                    ReportingCode: EXP
                    ReportingCodeName: Expense
                    UpdatedDateUTC: /Date(1550793549320+0000)/
        "400":
          description: Validation Error - some data was incorrect returns response of type Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                ErrorNumber: 10
                Type: ValidationException
                Message: A validation exception occurred
                Elements:
                  - AccountID: 00000000-0000-0000-0000-000000000000
                    Code: "123456"
                    Name: Foobar
                    Type: EXPENSE
                    Description: Hello World
                    ValidationErrors:
                      - Message: Please enter a unique Name.
      requestBody:
        required: true
        description: Account object in body of request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
            example:
              Code: "123456"
              Name: Foobar
              Type: EXPENSE
              Description: Hello World
  /Accounts/{AccountID}:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.settings
            - accounting.settings.read
      tags:
        - Accounting
      operationId: getAccount
      summary: Retrieves a single chart of accounts by using a unique account Id
      parameters:
        - $ref: "#/components/parameters/AccountID"
      responses:
        "200":
          description: Success - return response of type Accounts array with one Account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Accounts"
              example:
                Id: 323455cc-9511-4451-a873-248d2983f38e
                Status: OK
                ProviderName: Xero API Partner
                DateTimeUTC: /Date(1550797359081)/
                Accounts:
                  - AccountID: 99ce6032-0678-4aa0-8148-240c75fee33a
                    Code: "123456"
                    Name: FooBar
                    Status: ACTIVE
                    Type: EXPENSE
                    TaxType: INPUT
                    Description: Hello World
                    Class: EXPENSE
                    EnablePaymentsToAccount: false
                    ShowInExpenseClaims: false
                    ReportingCode: EXP
                    ReportingCodeName: Expense
                    UpdatedDateUTC: /Date(1550797359120+0000)/
    post:
      security:
        - OAuth2:
            - accounting.settings
      tags:
        - Accounting
      operationId: updateAccount
      summary: Updates a chart of accounts
      x-hasAccountingValidationError: true
      x-example:
        - account:
          is_object: true
          key: account
          keyPascal: Account
        - code:
          key: code
          keyPascal: Code
          default: 123456
          object: account
        - name:
          key: name
          keyPascal: Name
          default: BarFoo
          object: account
        - type:
          key: type
          keyPascal: Type
          default: EXPENSE
          nonString: true
          php: XeroAPI\XeroPHP\Models\Accounting\AccountType::EXPENSE
          node: AccountType.EXPENSE
          ruby: XeroRuby::Accounting::AccountType::EXPENSE
          python: AccountType.EXPENSE
          java: com.xero.models.accounting.AccountType.EXPENSE
          csharp: AccountType.EXPENSE
          object: account
        - description:
          key: description
          keyPascal: Description
          default: Hello World
          object: account
        - taxType:
          is_last: true
          key: taxType
          keyPascal: TaxType
          keySnake: tax_type
          default: NONE
          object: account
        - accounts:
          is_object: true
          key: accounts
          keyPascal: Accounts
        - accounts:
          is_last: true
          is_array_add: true
          key: accounts
          keyPascal: Accounts
          java: Accounts
          csharp: Account
          object: account
      parameters:
        - $ref: "#/components/parameters/AccountID"
        - $ref: "#/components/parameters/idempotencyKey"
      responses:
        "200":
          description: Success - update existing Account and return response of type Accounts array with updated Account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Accounts"
              example:
                Id: 9012e75c-ec08-40a9-ae15-153fc1f35c4d
                Status: OK
                ProviderName: Xero API Partner
                DateTimeUTC: /Date(1550795389340)/
                Accounts:
                  - AccountID: 99ce6032-0678-4aa0-8148-240c75fee33a
                    Code: "654321"
                    Name: BarFoo
                    Status: ACTIVE
                    Type: EXPENSE
                    TaxType: INPUT
                    Description: Good Bye World
                    Class: EXPENSE
                    EnablePaymentsToAccount: false
                    ShowInExpenseClaims: false
                    ReportingCode: EXP
                    ReportingCodeName: Expense
                    UpdatedDateUTC: /Date(1550795389333+0000)/
        "400":
          description: Validation Error - some data was incorrect returns response of type Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                ErrorNumber: 10
                Type: ValidationException
                Message: A validation exception occurred
                Elements:
                  - AccountID: 00000000-0000-0000-0000-000000000000
                    Code: "123456"
                    Name: Foobar
                    Type: EXPENSE
                    Description: Hello World
                    ValidationErrors:
                      - Message: Please enter a unique Name.
      requestBody:
        required: true
        description: Request of type Accounts array with one Account
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Accounts"
            example:
              Accounts:
                - Code: "123456"
                  Name: BarFoo
                  AccountID: 99ce6032-0678-4aa0-8148-240c75fee33a
                  Type: EXPENSE
                  Description: GoodBye World
                  TaxType: INPUT
                  EnablePaymentsToAccount: false
                  ShowInExpenseClaims: false
                  Class: EXPENSE
                  ReportingCode: EXP
                  ReportingCodeName: Expense
                  UpdatedDateUTC: "2019-02-21T16:29:47.96-08:00"
    delete:
      security:
        - OAuth2:
            - accounting.settings
      tags:
        - Accounting
      operationId: deleteAccount
      x-hasAccountingValidationError: true
      summary: Deletes a chart of accounts
      parameters:
        - $ref: "#/components/parameters/AccountID"
      responses:
        "200":
          description: Success - delete existing Account and return response of type Accounts array with deleted Account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Accounts"
              example:
                Id: 76bb0543-8efe-4acc-b7f6-67dfcdec37b4
                Status: OK
                ProviderName: Xero API Partner
                DateTimeUTC: /Date(1550798217216)/
                Accounts:
                  - AccountID: 7f3c0bec-f3e7-4073-b4d6-cc56dd027ef1
                    Code: "123456"
                    Name: FooBar
                    Status: DELETED
                    Type: EXPENSE
                    TaxType: INPUT
                    Description: Hello World
                    Class: EXPENSE
                    EnablePaymentsToAccount: false
                    ShowInExpenseClaims: false
                    ReportingCode: EXP
                    ReportingCodeName: Expense
                    UpdatedDateUTC: /Date(1550798217210+0000)/
        "400":
          description: Validation Error - some data was incorrect returns response of type Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                ErrorNumber: 10
                Type: ValidationException
                Message: A validation exception occurred
                Elements:
                  - AccountID: 00000000-0000-0000-0000-000000000000
                    Code: "123456"
                    Name: Foobar
                    Type: EXPENSE
                    Description: Hello World
                    ValidationErrors:
                      - Message: Please enter a unique Name.
  /Accounts/{AccountID}/Attachments:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.attachments
            - accounting.attachments.read
      tags:
        - Accounting
      operationId: getAccountAttachments
      summary: Retrieves attachments for a specific accounts by using a unique account Id
      parameters:
        - $ref: "#/components/parameters/AccountID"
      responses:
        "200":
          description: Success - return response of type Attachments array of Attachment
          x-isAttachment: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Attachments"
              example:
                Id: 439c1573-3cd8-4697-a9f6-81fa651ee8f3
                Status: OK
                ProviderName: Xero API Partner
                DateTimeUTC: /Date(1550852630329)/
                Attachments:
                  - AttachmentID: 52a643be-cd5c-489f-9778-53a9fd337756
                    FileName: sample5.jpg
                    Url: https://api.xero.com/api.xro/2.0/Accounts/da962997-a8bd-4dff-9616-01cdc199283f/Attachments/sample5.jpg
                    MimeType: image/jpg
                    ContentLength: 2878711
  /Accounts/{AccountID}/Attachments/{AttachmentID}:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.attachments
            - accounting.attachments.read
      tags:
        - Accounting
      operationId: getAccountAttachmentById
      summary: Retrieves a specific attachment from a specific account using a unique attachment Id
      parameters:
        - $ref: "#/components/parameters/AccountID"
        - $ref: "#/components/parameters/AttachmentID"
        - $ref: "#/components/parameters/ContentType"
      responses:
        "200":
          description: Success - return response of attachment for Account as binary data
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /Accounts/{AccountID}/Attachments/{FileName}:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.attachments
            - accounting.attachments.read
      tags:
        - Accounting
      operationId: getAccountAttachmentByFileName
      summary: Retrieves an attachment for a specific account by filename
      parameters:
        - $ref: "#/components/parameters/AccountID"
        - $ref: "#/components/parameters/FileName"
        - $ref: "#/components/parameters/ContentType"
      responses:
        "200":
          description: Success - return response of attachment for Account as binary data
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
    post:
      security:
        - OAuth2:
            - accounting.attachments
      tags:
        - Accounting
      operationId: updateAccountAttachmentByFileName
      x-hasAccountingValidationError: true
      summary: Updates attachment on a specific account by filename
      parameters:
        - $ref: "#/components/parameters/AccountID"
        - $ref: "#/components/parameters/FileName"
        - $ref: "#/components/parameters/idempotencyKey"
      responses:
        "200":
          description: Success - return response of type Attachments array of Attachment
          x-isAttachment: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Attachments"
              example:
                Id: c8d6413a-1da2-4faa-9848-21f60443e906
                Status: OK
                ProviderName: Xero API Partner
                DateTimeUTC: /Date(1550859714477)/
                Attachments:
                  - AttachmentID: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    FileName: sample5.jpg
                    Url: https://api.xero.com/api.xro/2.0/Accounts/da962997-a8bd-4dff-9616-01cdc199283f/Attachments/sample5.jpg
                    MimeType: image/jpg
                    ContentLength: 2878711
        "400":
          description: Validation Error - some data was incorrect returns response of type Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        required: true
        description: Byte array of file in body of request
        content:
          application/octet-stream:
            schema:
              type: string
              format: byte
    put:
      security:
        - OAuth2:
            - accounting.attachments
      tags:
        - Accounting
      operationId: createAccountAttachmentByFileName
      x-hasAccountingValidationError: true
      summary: Creates an attachment on a specific account
      parameters:
        - $ref: "#/components/parameters/AccountID"
        - $ref: "#/components/parameters/FileName"
        - $ref: "#/components/parameters/idempotencyKey"
      responses:
        "200":
          description: Success - return response of type Attachments array of Attachment
          x-isAttachment: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Attachments"
              example:
                Id: 724cdff5-bcd1-4c5c-977e-e864c24258e0
                Status: OK
                ProviderName: Xero API Partner
                DateTimeUTC: /Date(1550856817769)/
                Attachments:
                  - AttachmentID: ab95b276-9dce-4925-9077-439818ba270f
                    FileName: sample5.jpg
                    Url: https://api.xero.com/api.xro/2.0/Accounts/da962997-a8bd-4dff-9616-01cdc199283f/Attachments/sample5.jpg
                    MimeType: image/jpg
                    ContentLength: 2878711
        "400":
          $ref: "#/components/responses/400Error"
      requestBody:
        required: true
        description: Byte array of file in body of request
        content:
          application/octet-stream:
            schema:
              type: string
              format: byte
  /BrandingThemes/{BrandingThemeID}/PaymentServices:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - paymentservices
      tags:
        - Accounting
      operationId: getBrandingThemePaymentServices
      summary: Retrieves the payment services for a specific branding theme
      x-excludeFromPreview: true
      parameters:
        - $ref: "#/components/parameters/BrandingThemeID"
      responses:
        "200":
          description: Success - return response of type PaymentServices array with 0 to N PaymentService
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentServices"
              example:
                Id: bfd5adbe-0e92-48f0-8c5a-39072f6c4ed3
                Status: OK
                ProviderName: Xero API Partner
                DateTimeUTC: /Date(1551139339419)/
                PaymentServices:
                  - PaymentServiceID: 8cc53aa4-ae01-45b9-b06c-69c42eeae61f
                    PaymentServiceName: Buzz Lightyear
                    PaymentServiceType: PayPal
                  - PaymentServiceID: dede7858-14e3-4a46-bf95-4d4cc491e645
                    PaymentServiceName: ACME Payment
                    PaymentServiceUrl: https://www.payupnow.com/
                    PaymentServiceType: Custom
                    PayNowText: Pay Now
    post:
      security:
        - OAuth2:
            - paymentservices
      tags:
        - Accounting
      operationId: createBrandingThemePaymentServices
      summary: Creates a new custom payment service for a specific branding theme
      x-excludeFromPreview: true
      x-hasAccountingValidationError: true
      x-example:
        - object:
          is_object: true
          key: paymentService
          keyPascal: PaymentService
          keySnake: payment_service
        - paymentServiceID:
          is_uuid: true
          key: paymentServiceID
          keyPascal: PaymentServiceID
          keySnake: payment_service_id
          default: 00000000-0000-0000-0000-000000000000
          object: paymentService
        - paymentServiceName:
          key: paymentServiceName
          keyPascal: PaymentServiceName
          keySnake: payment_service_name
          default: ACME Payments
          object: paymentService
        - paymentServiceUrl:
          key: paymentServiceUrl
          keyPascal: PaymentServiceUrl
          keySnake: payment_service_url
          default: https://www.payupnow.com/
          object: paymentService
        - payNowText:
          is_last: true
          key: payNowText
          keyPascal: PayNowText
          keySnake: pay_now_text
          default: Pay Now
          object: paymentService
        - paymentServices:
          is_object: true
          key: paymentServices
          keyPascal: PaymentServices
        - add_paymentService:
          is_last: true
          is_array_add: true
          key: paymentServices
          keyPascal: PaymentServices
          java: PaymentServices
          csharp: PaymentService
          object: paymentService
      parameters:
        - $ref: "#/components/parameters/idempotencyKey"
        - $ref: "#/components/parameters/BrandingThemeID"
      responses:
        "200":
          description: Success - return response of type PaymentServices array with newly created PaymentService
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentServices"
              example:
                Id: 918feecb-067a-4ed9-841b-571c04eaada3
                Status: OK
                ProviderName: Xero API Partner
                DateTimeUTC: /Date(1551139338915)/
                PaymentServices:
                  - PaymentServiceID: 00000000-0000-0000-0000-000000000000
                    PaymentServiceName: ACME Payments
                    PaymentServiceUrl: https://www.payupnow.com/
                    PaymentServiceType: Custom
                    PayNowText: Pay Now
        "400":
          $ref: "#/components/responses/400Error"
      requestBody:
        required: true
        description: PaymentServices array with PaymentService object in body of request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentServices"
            example:
              PaymentServices:
                - PaymentServiceID: 54b3b4f6-0443-4fba-bcd1-61ec0c35ca55
                  PaymentServiceName: PayUpNow
                  PaymentServiceUrl: https://www.payupnow.com/
                  PaymentServiceType: Custom
                  PayNowText: Time To Pay
  /Budgets:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.budgets.read
      tags:
        - Accounting
      operationId: getBudgets
      summary: Retrieve a list of budgets
      parameters:
        - in: query
          name: IDs
          x-snake: ids
          description: Filter by BudgetID. Allows you to retrieve a specific individual budget.
          style: form
          explode: false
          example: "&quot;00000000-0000-0000-0000-000000000000&quot;"
          x-example-java: UUID.fromString("00000000-0000-0000-0000-000000000000")
          x-example-php: "&quot;00000000-0000-0000-0000-000000000000&quot;"
          x-example-csharp: Guid.Parse("00000000-0000-0000-0000-000000000000");
          schema:
            type: string
            items:
              type: string
              format: uuid
        - in: query
          name: DateTo
          x-snake: date_to
          description: Filter by start date
          example: "2019-10-31"
          schema:
            type: string
            format: date
        - in: query
          name: DateFrom
          x-snake: date_from
          description: Filter by end date
          example: "2019-10-31"
          schema:
            type: string
            format: date
      responses:
        "200":
          description: Success - return response of type Budgets array with 0 to N Budgets
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Budgets"
              example:
                Id: 04e93d48-e72f-4775-b7dd-15a041fab972
                Status: OK
                ProviderName: Xero API Partner
                DateTimeUTC: /Date(1551399323399)/
                Budgets:
                  - BudgetID: 847da917-9565-466c-a9cd-3ecf7eb9d094
                    Status: APPROVED
                    Description: FY2021 budget
                    Type: TRACKING
                    UpdatedDateUTC: /Date(1622138002077+0000)/
                    BudgetLines: []
                    Tracking: []
                  - BudgetID: 93a4bab1-0021-4320-a2ec-c250528b4bc5
                    Status: APPROVED
                    Description: Overall Budget
                    Type: OVERALL
                    UpdatedDateUTC: /Date(1622137786913+0000)/
                    BudgetLines: []
                    Tracking: []
  /Budgets/{BudgetID}:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.budgets.read
      tags:
        - Accounting
      operationId: getBudget
      summary: Retrieves a specific budget, which includes budget lines
      parameters:
        - $ref: "#/components/parameters/BudgetID"
        - in: query
          name: DateTo
          x-snake: date_to
          description: Filter by start date
          example: "2019-10-31"
          schema:
            type: string
            format: date
        - in: query
          name: DateFrom
          x-snake: date_from
          description: Filter by end date
          example: "2019-10-31"
          schema:
            type: string
            format: date
      responses:
        "200":
          description: Success - return response of type Invoices array with specified Invoices
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Budgets"
              example:
                Id: 04e93d48-e72f-4775-b7dd-15a041fab972
                Status: OK
                ProviderName: Xero API Partner
                DateTimeUTC: /Date(1551399323399)/
                Budgets:
                  BudgetID: c1d195d4-92aa-4abd-867a-7ac2f9d60500
                  Type: TRACKING
                  Description: Daniels Northern Budget
                  UpdatedDateUTC: 2017-08-14T01:18:26.74
                  Tracking:
                    - TrackingCategoryID: e94ba240-3edf-4ef3-8317-10147b968f94
                      Name: Region
                      TrackingOptionID: e94ba240-3edf-4ef3-8317-10147b968f94
                      Option: North
                    - TrackingCategoryID: d8580491-4167-4a81-9624-ad3bdd8e46ce
                      Name: Salesperson
                      TrackingOptionID: 9c24de87-a2b7-439d-a216-35d1af7bdec3
                      Option: Daniel
                  BudgetLines:
                    - AccountID: 9c24de87-a2b7-439d-a216-35d1af7bdec3
                      AccountCode: "200"
                      BudgetBalances:
                        - Period: 2019-08
                          Amount: "1000"
                          Notes: Sample note
                        - Period: 2019-09
                          Amount: "1050"
                          Notes: ""
                        - Period: 2019-10
                          Amount: "1102"
                          Notes: ""
                    - AccountID: 385f90ae-e798-4990-9b1c-db8eb8b735c2
                      AccountCode: "420"
                      BudgetBalances:
                        - Period: 2019-08
                          Amount: "500"
                          Notes: ""
                        - Period: 2019-09
                          Amount: "505"
                          Notes: Special Month
                        - Period: 2019-10
                          Amount: "510"
                          Notes: ""
  /Contacts:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.contacts
            - accounting.contacts.read
      tags:
        - Accounting
      operationId: getContacts
      summary: Retrieves all contacts in a Xero organisation
      parameters:
        - $ref: "#/components/parameters/ifModifiedSince"
        - in: query
          name: where
          description: Filter by an any element
          example: ContactStatus==&quot;ACTIVE&quot;
          x-example-csharp: ContactStatus==\&quot;ACTIVE\&quot;
          x-example-java: ContactStatus==&quot;&apos; + Contact.ContactStatusEnum.ACTIVE + &apos;&quot;
          x-example-php: ContactStatus==&quot;&apos; . \XeroAPI\XeroPHP\Models\Accounting\Contact::CONTACT_STATUS_ACTIVE . &apos;&quot;
          x-example-ruby: ContactStatus==#{XeroRuby::Accounting::Contact::ACTIVE}
          schema:
            type: string
        - in: query
          name: order
          description: Order by an any element
          example: Name ASC
          schema:
            type: string
        - in: query
          name: IDs
          x-snake: ids
          description: Filter by a comma separated list of ContactIDs. Allows you to retrieve a specific set of contacts in a single call.
          style: form
          explode: false
          example: "&quot;00000000-0000-0000-0000-000000000000&quot;"
          x-example-java: Arrays.asList(UUID.fromString("00000000-0000-0000-0000-000000000000"))
          x-example-php: "&quot;00000000-0000-0000-0000-000000000000&quot;"
          x-example-csharp: new List&lt;Guid&gt;{Guid.Parse("00000000-0000-0000-0000-000000000000")};
          schema:
            type: array
            items:
              type: string
              format: uuid
        - in: query
          name: page
          description: e.g. page=1 - Up to 100 contacts will be returned in a single API call.
          example: 1
          schema:
            type: integer
        - in: query
          name: includeArchived
          x-snake: include_archived
          description: e.g. includeArchived=true - Contacts with a status of ARCHIVED will be included in the response
          example: true
          x-example-python: "True"
          schema:
            type: boolean
        - $ref: "#/components/parameters/summaryOnly"
        - in: query
          name: searchTerm
          x-snake: search_term
          description: Search parameter that performs a case-insensitive text search across the Name, FirstName, LastName, ContactNumber and EmailAddress fields.
          example: Joe Bloggs
          schema:
            type: string
        - $ref: "#/components/parameters/pageSize"
      responses:
        "200":
          description: Success - return response of type Contacts array with 0 to N Contact
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contacts"
              example:
                Id: 04e93d48-e72f-4775-b7dd-15a041fab972
                Status: OK
                ProviderName: Xero API Partner
                DateTimeUTC: /Date(1551399323399)/
                pagination:
                  page: 1
                  pageSize: 100
                  pageCount: 1
                  itemCount: 2
                Contacts:
                  - ContactID: 5cc8cf28-567e-4d43-b287-687cfcaec47c
                    ContactStatus: ACTIVE
                    Name: Katherine Warren
                    FirstName: Katherine
                    LastName: Warren
                    CompanyNumber: NumberBusiness1234
                    EmailAddress: kat.warren@clampett.com
                    BankAccountDetails: ""
                    Addresses:
                      - AddressType: STREET
                        City: ""
                        Region: ""
                        PostalCode: ""
                        Country: ""
                      - AddressType: POBOX
                        AddressLine1: ""
                        AddressLine2: ""
                        AddressLine3: ""
                        AddressLine4: ""
                        City: Palo Alto
                        Region: CA
                        PostalCode: "94020"
                        Country: United States
                    Phones:
                      - PhoneType: DDI
                        PhoneNumber: ""
                        PhoneAreaCode: ""
                        PhoneCountryCode: ""
                      - PhoneType: DEFAULT
                        PhoneNumber: 847-1294
                        PhoneAreaCode: (626)
                        PhoneCountryCode: ""
                      - PhoneType: FAX
                        PhoneNumber: ""
                        PhoneAreaCode: ""
                        PhoneCountryCode: ""
                      - PhoneType: MOBILE
                        PhoneNumber: ""
                        PhoneAreaCode: ""
                        PhoneCountryCode: ""
                    UpdatedDateUTC: /Date(1503348544227+0000)/
                    ContactGroups: []
                    IsSupplier: true
                    IsCustomer: true
                    SalesDefaultLineAmountType: INCLUSIVE
                    PurchasesDefaultLineAmountType: INCLUSIVE
                    Balances:
                      AccountsReceivable:
                        Outstanding: 760.00
                        Overdue: 920.00
                      AccountsPayable:
                        Outstanding: 231.60
                        Overdue: 360.00
                    ContactPersons: []
                    HasAttachments: false
                    HasValidationErrors: false
                  - ContactID: 3ec601ad-eddc-4ccb-a8ac-736e88293b1b
                    ContactStatus: ACTIVE
                    Name: Lisa Parker
                    FirstName: Lisa
                    LastName: Parker
                    EmailAddress: lparker@parkerandco.com
                    BankAccountDetails: ""
                    Addresses:
                      - AddressType: STREET
                        City: ""
                        Region: ""
                        PostalCode: ""
                        Country: ""
                      - AddressType: POBOX
                        AddressLine1: ""
                        AddressLine2: ""
                        AddressLine3: ""
                        AddressLine4: ""
                        City: Anchorage
                        Region: AK
                        PostalCode: "99501"
                        Country: United States
                    Phones:
                      - PhoneType: DDI
                        PhoneNumber: ""
                        PhoneAreaCode: ""
                        PhoneCountryCode: ""
                      - PhoneType: DEFAULT
                        PhoneNumber: 266-3583
                        PhoneAreaCode: (510)
                        PhoneCountryCode: ""
                      - PhoneType: FAX
                        PhoneNumber: ""
                        PhoneAreaCode: ""
                        PhoneCountryCode: ""
                      - PhoneType: MOBILE
                        PhoneNumber: ""
                        PhoneAreaCode: ""
                        PhoneCountryCode: ""
                    UpdatedDateUTC: /Date(1503348546760+0000)/
                    ContactGroups: []
                    IsSupplier: false
                    IsCustomer: false
                    ContactPersons: []
                    HasAttachments: false
                    HasValidationErrors: false
    put:
      security:
        - OAuth2:
            - accounting.contacts
      tags:
        - Accounting
      operationId: createContacts
      summary: Creates multiple contacts (bulk) in a Xero organisation
      x-hasAccountingValidationError: true
      x-example:
        - phone:
          is_object: true
          key: phone
          keyPascal: Phone
        - phoneNumber:
          key: phoneNumber
          keyPascal: PhoneNumber
          keySnake: phone_number
          default: 555-1212
          object: phone
        - phoneType:
          is_last: true
          nonString: true
          key: phoneType
          keyPascal: PhoneType
          keySnake: phone_type
          default: MOBILE
          php: XeroAPI\XeroPHP\Models\Accounting\Phone::PHONE_TYPE_MOBILE
          node: Phone.PhoneTypeEnum.MOBILE
          ruby: XeroRuby::Accounting::PhoneType::MOBILE
          python_string: MOBILE
          java: com.xero.models.accounting.Phone.PhoneTypeEnum.MOBILE
          csharp: Phone.PhoneTypeEnum.MOBILE
          object: phone
        - phones:
          is_list: true
          key: phones
          keyPascal: Phone
        - add_phone:
          is_last: true
          is_list_add: true
          key: phones
          keyPascal: Phones
          object: phone
        - contact:
          is_object: true
          key: contact
          keyPascal: Contact
        - name:
          key: name
          keyPascal: Name
          default: Bruce Banner
          object: contact
        - emailAddress:
          key: emailAddress
          keyPascal: EmailAddress
          keySnake: email_address
          default: hulk@avengers.com
          object: contact
        - set_phones:
          is_last: true
          is_variable: true
          nonString: true
          key: phones
          keyPascal: Phones
          default: phones
          object: contact
        - contacts:
          is_object: true
          key: contacts
          keyPascal: Contacts
        - add_contact:
          is_last: true
          is_array_add: true
          key: contacts
          keyPascal: Contacts
          java: Contacts
          csharp: Contact
          object: contact
      parameters:
        - $ref: "#/components/parameters/summarizeErrors"
        - $ref: "#/components/parameters/idempotencyKey"
      responses:
        "200":
          description: Success - return response of type Contacts array with newly created Contact
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contacts"
              example:
                Id: e997d6d7-6dad-4458-beb8-d9c1bf7f2edf
                Status: OK
                ProviderName: Xero API Partner
                DateTimeUTC: /Date(1551399321121)/
                Contacts:
                  - ContactID: 3ff6d40c-af9a-40a3-89ce-3c1556a25591
                    ContactStatus: ACTIVE
                    CompanyNumber: NumberBusiness1234
                    Name: Foo9987
                    EmailAddress: sid32476@blah.com
                    BankAccountDetails: ""
                    Addresses:
                      - AddressType: STREET
                        City: ""
                        Region: ""
                        PostalCode: ""
                        Country: ""
                      - AddressType: POBOX
                        City: ""
                        Region: ""
                        PostalCode: ""
                        Country: ""
                    Phones:
                      - PhoneType: DEFAULT
                        PhoneNumber: ""
                        PhoneAreaCode: ""
                        PhoneCountryCode: ""
                      - PhoneType: DDI
                        PhoneNumber: ""
                        PhoneAreaCode: ""
                        PhoneCountryCode: ""
                      - PhoneType: FAX
                        PhoneNumber: ""
                        PhoneAreaCode: ""
                        PhoneCountryCode: ""
                      - PhoneType: MOBILE
                        PhoneNumber: 555-1212
                        PhoneAreaCode: "415"
                        PhoneCountryCode: ""
                    UpdatedDateUTC: /Date(1551399321043+0000)/
                    ContactGroups: []
                    IsSupplier: false
                    IsCustomer: false
                    SalesDefaultLineAmountType: INCLUSIVE
                    PurchasesDefaultLineAmountType: INCLUSIVE
                    SalesTrackingCategories: []
                    PurchasesTrackingCategories: []
                    PaymentTerms:
                      Bills:
                        Day: 15
                        Type: OFCURRENTMONTH
                      Sales:
                        Day: 10
                        Type: DAYSAFTERBILLMONTH
                    ContactPersons: []
                    HasValidationErrors: false
        "400":
          description: Validation Error - some data was incorrect returns response of type Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                ErrorNumber: 10
                Type: ValidationException
                Message: A validation exception occurred
                Elements:
                  - ContactID: 00000000-0000-0000-0000-000000000000
                    AccountNumber: 12345-ABCD
                    Name: Buzz Lightyear
                    EmailAddress: buzzlightyear@email.com
                    AccountsReceivableTaxType: NONE
                    AccountsPayableTaxType: INPUT
                    Addresses:
                      - AddressType: STREET
                        AddressLine1: 101 Green St
                        AddressLine2: 5th floor
                        City: San Francisco
                        Region: CA
                        PostalCode: "94041"
                        Country: US
                        AttentionTo: Rod Drury
                        ValidationErrors: []
                    Phones:
                      - PhoneType: MOBILE
                        PhoneNumber: 555-1212
                        PhoneAreaCode: "415"
                        ValidationErrors: []
                    ContactGroups: []
                    PaymentTerms:
                      Bills:
                        Day: 15
                        Type: OFCURRENTMONTH
                        ValidationErrors: []
                      Sales:
                        Day: 10
                        Type: DAYSAFTERBILLMONTH
                        ValidationErrors: []
                    ContactPersons: []
                    HasValidationErrors: true
                    ValidationErrors:
                      - Message: The contact name Buzz Lightyear is already assigned to another contact. The contact name must be unique across all active contacts.
      requestBody:
        required: true
        description: Contacts with an array of Contact objects to create in body of request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Contacts"
            example:
              Contacts:
                - ContactID: 3ff6d40c-af9a-40a3-89ce-3c1556a25591
                  ContactStatus: ACTIVE
                  Name: Foo9987
                  EmailAddress: sid32476@blah.com
                  BankAccountDetails: ""
                  Addresses:
                    - AddressType: STREET
                      City: ""
                      Region: ""
                      PostalCode: ""
                      Country: ""
                    - AddressType: POBOX
                      City: ""
                      Region: ""
                      PostalCode: ""
                      Country: ""
                  Phones:
                    - PhoneType: DEFAULT
                      PhoneNumber: ""
                      PhoneAreaCode: ""
                      PhoneCountryCode: ""
                    - PhoneType: DDI
                      PhoneNumber: ""
                      PhoneAreaCode: ""
                      PhoneCountryCode: ""
                    - PhoneType: FAX
                      PhoneNumber: ""
                      PhoneAreaCode: ""
                      PhoneCountryCode: ""
                    - PhoneType: MOBILE
                      PhoneNumber: 555-1212
                      PhoneAreaCode: "415"
                      PhoneCountryCode: ""
                  UpdatedDateUTC: /Date(1551399321043+0000)/
                  ContactGroups: []
                  IsSupplier: false
                  IsCustomer: false
                  SalesTrackingCategories: []
                  PurchasesTrackingCategories: []
                  PaymentTerms:
                    Bills:
                      Day: 15
                      Type: OFCURRENTMONTH
                    Sales:
                      Day: 10
                      Type: DAYSAFTERBILLMONTH
                  ContactPersons: []
    post:
      security:
        - OAuth2:
            - accounting.contacts
      tags:
        - Accounting
      operationId: updateOrCreateContacts
      summary: Updates or creates one or more contacts in a Xero organisation
      x-hasAccountingValidationError: true
      x-example:
        - phone:
          is_object: true
          key: phone
          keyPascal: Phone
        - phoneNumber:
          key: phoneNumber
          keyPascal: PhoneNumber
          keySnake: phone_number
          default: 555-1212
          object: phone
        - phoneType:
          is_last: true
          nonString: true
          key: phoneType
          keyPascal: PhoneType
          keySnake: phone_type
          default: MOBILE
          php: XeroAPI\XeroPHP\Models\Accounting\Phone::PHONE_TYPE_MOBILE
          node: Phone.PhoneTypeEnum.MOBILE
          ruby: XeroRuby::Accounting::PhoneType::MOBILE
          python_string: MOBILE
          java: com.xero.models.accounting.Phone.PhoneTypeEnum.MOBILE
          csharp: Phone.PhoneTypeEnum.MOBILE
          object: phone
        - phones:
          is_list: true
          key: phones
          keyPascal: Phone
        - add_phone:
          is_last: true
          is_list_add: true
          key: phones
          keyPascal: Phones
          object: phone
        - contact:
          is_object: true
          key: contact
          keyPascal: Contact
        - name:
          key: name
          keyPascal: Name
          default: Bruce Banner
          object: contact
        - emailAddress:
          key: emailAddress
          keyPascal: EmailAddress
          keySnake: email_address
          default: hulk@avengers.com
          object: contact
        - set_phones:
          is_last: true
          is_variable: true
          nonString: true
          key: phones
          keyPascal: Phones
          default: phones
          object: contact
        - contacts:
          is_object: true
          key: contacts
          keyPascal: Contacts
        - add_contact:
          is_last: true
          is_array_add: true
          key: contacts
          keyPascal: Contacts
          java: Contacts
          csharp: Contact
          object: contact
      parameters:
        - $ref: "#/components/parameters/summarizeErrors"
        - $ref: "#/components/parameters/idempotencyKey"
      responses:
        "200":
          description: Success - return response of type Contacts array with newly created Contact
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contacts"
              example:
                Id: e997d6d7-6dad-4458-beb8-d9c1bf7f2edf
                Status: OK
                ProviderName: Xero API Partner
                DateTimeUTC: /Date(1551399321121)/
                Contacts:
                  - ContactID: 00000000-0000-0000-0000-000000000000
                    ContactStatus: ACTIVE
                    Name: Bruce Banner
                    CompanyNumber: NumberBusiness1234
                    EmailAddress: bruce@banner.com
                    BankAccountDetails: ""
                    Addresses:
                      - AddressType: STREET
                        City: ""
                        Region: ""
                        PostalCode: ""
                        Country: ""
                      - AddressType: POBOX
                        City: ""
                        Region: ""
                        PostalCode: ""
                        Country: ""
                    Phones:
                      - PhoneType: DEFAULT
                        PhoneNumber: ""
                        PhoneAreaCode: ""
                        PhoneCountryCode: ""
                      - PhoneType: DDI
                        PhoneNumber: ""
                        PhoneAreaCode: ""
                        PhoneCountryCode: ""
                      - PhoneType: FAX
                        PhoneNumber: ""
                        PhoneAreaCode: ""
                        PhoneCountryCode: ""
                      - PhoneType: MOBILE
                        PhoneNumber: 555-1212
                        PhoneAreaCode: "415"
                        PhoneCountryCode: ""
                    UpdatedDateUTC: /Date(1551399321043+0000)/
                    ContactGroups: []
                    IsSupplier: false
                    IsCustomer: false
                    SalesDefaultLineAmountType: INCLUSIVE
                    PurchasesDefaultLineAmountType: INCLUSIVE
                    SalesTrackingCategories: []
                    PurchasesTrackingCategories: []
                    PaymentTerms:
                      Bills:
                        Day: 15
                        Type: OFCURRENTMONTH
                      Sales:
                        Day: 10
                        Type: DAYSAFTERBILLMONTH
                    ContactPersons: []
                    HasValidationErrors: false
        "400":
          description: Validation Error - some data was incorrect returns response of type Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                ErrorNumber: 10
                Type: ValidationException
                Message: A validation exception occurred
                Elements:
                  - ContactID: 00000000-0000-0000-0000-000000000000
                    AccountNumber: 12345-ABCD
                    Name: Buzz Lightyear
                    EmailAddress: buzzlightyear@email.com
                    AccountsReceivableTaxType: NONE
                    AccountsPayableTaxType: INPUT
                    Addresses:
                      - AddressType: STREET
                        AddressLine1: 101 Green St
                        AddressLine2: 5th floor
                        City: San Francisco
                        Region: CA
                        PostalCode: "94041"
                        Country: US
                        AttentionTo: Rod Drury
                        ValidationErrors: []
                    Phones:
                      - PhoneType: MOBILE
                        PhoneNumber: 555-1212
                        PhoneAreaCode: "415"
                        ValidationErrors: []
                    ContactGroups: []
                    PaymentTerms:
                      Bills:
                        Day: 15
                        Type: OFCURRENTMONTH
                        ValidationErrors: []
                      Sales:
                        Day: 10
                        Type: DAYSAFTERBILLMONTH
                        ValidationErrors: []
                    ContactPersons: []
                    HasValidationErrors: true
                    ValidationErrors:
                      - Message: The contact name Buzz Lightyear is already assigned to another contact. The contact name must be unique across all active contacts.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Contacts"
            example:
              Contacts:
                - Name: Bruce Banner
                  EmailAddress: hulk@avengers.com
                  Phones:
                    - PhoneType: MOBILE
                      PhoneNumber: 555-1212
                      PhoneAreaCode: "415"
                  PaymentTerms:
                    Bills:
                      Day: 15
                      Type: OFCURRENTMONTH
                    Sales:
                      Day: 10
                      Type: DAYSAFTERBILLMONTH
  /Contacts/{ContactNumber}:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.contacts
            - accounting.contacts.read
      tags:
        - Accounting
      operationId: getContactByContactNumber
      summary: Retrieves a specific contact by contact number in a Xero organisation
      parameters:
        - required: true
          in: path
          name: ContactNumber
          x-snake: contact_number
          description: This field is read only on the Xero contact screen, used to identify contacts in external systems (max length = 50).
          example: SB2
          schema:
            type: string
      responses:
        "200":
          description: Success - return response of type Contacts array with a unique Contact
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contacts"
              example:
                Id: 5c83b115-a6e8-4f2a-877f-ba63d009235b
                Status: OK
                ProviderName: Xero API Partner
                DateTimeUTC: /Date(1551462703288)/
                Contacts:
                  - ContactID: 8138a266-fb42-49b2-a104-014b7045753d
                    ContactNumber: SB2
                    AccountNumber: "1234567"
                    ContactStatus: ACTIVE
                    Name: Acme Parts Co.
                    FirstName: Blake
                    LastName: Kohler
                    CompanyNumber: NumberBusiness1234
                    EmailAddress: bk@krave.co
                    BankAccountDetails: "12334567"
                    TaxNumber: 123-22-3456
                    AccountsReceivableTaxType: TAX003
                    AccountsPayableTaxType: TAX022
                    Addresses:
                      - AddressType: STREET
                        AddressLine1: 123 Fake Street
                        City: Vancouver
                        Region: British Columbia
                        PostalCode: V6B 2T4
                        Country: ""
                        AttentionTo: ""
                      - AddressType: POBOX
                        AddressLine1: 1234 Fake Street
                        City: Vancouver
                        Region: British Columbia
                        PostalCode: V6B 2T4
                        Country: ""
                        AttentionTo: Blake
                    Phones:
                      - PhoneType: DDI
                        PhoneNumber: 489-44493
                        PhoneAreaCode: "345"
                        PhoneCountryCode: "4"
                      - PhoneType: DEFAULT
                        PhoneNumber: 408-0914
                        PhoneAreaCode: "604"
                        PhoneCountryCode: "1"
                      - PhoneType: FAX
                        PhoneNumber: 123-9933
                        PhoneAreaCode: "123"
                        PhoneCountryCode: "2"
                      - PhoneType: MOBILE
                        PhoneNumber: 999-44
                        PhoneAreaCode: "234"
                        PhoneCountryCode: "3"
                    UpdatedDateUTC: /Date(1551459777193+0000)/
                    ContactGroups: []
                    IsSupplier: true
                    IsCustomer: true
                    SalesDefaultLineAmountType: INCLUSIVE
                    PurchasesDefaultLineAmountType: INCLUSIVE
                    DefaultCurrency: USD
                    Discount: 13.00
                    Website: http://www.google.com
                    BrandingTheme:
                      BrandingThemeID: dabc7637-62c1-4941-8a6e-ee44fa5090e7
                      Name: Standard
                    PurchasesDefaultAccountCode: "660"
                    SalesDefaultAccountCode: "002"
                    BatchPayments:
                      BankAccountNumber: "12334567"
                      BankAccountName: Citi Bank
                      Details: biz checking
                      Code: ""
                      Reference: ""
                    Balances:
                      AccountsReceivable:
                        Outstanding: 118.90
                        Overdue: 136.90
                      AccountsPayable:
                        Outstanding: -43.60
                        Overdue: 40.00
                    PaymentTerms:
                      Bills:
                        Day: 12
                        Type: OFFOLLOWINGMONTH
                      Sales:
                        Day: 14
                        Type: OFCURRENTMONTH
                    ContactPersons:
                      - FirstName: Sue
                        LastName: Johnson
                        EmailAddress: sue.johnson@krave.com
                        IncludeInEmails: true
                    HasAttachments: true
                    Attachments:
                      - AttachmentID: 04e0a3e3-b116-456a-9f32-9706f0d33afa
                        FileName: sample5.jpg
                        Url: https://api.xero.com/api.xro/2.0/contact/8138a266-fb42-49b2-a104-014b7045753d/Attachments/sample5.jpg
                        MimeType: image/jpg
                        ContentLength: 2878711
                    HasValidationErrors: false
  /Contacts/{ContactID}:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.contacts
            - accounting.contacts.read
      tags:
        - Accounting
      operationId: getContact
      summary: Retrieves a specific contacts in a Xero organisation using a unique contact Id
      parameters:
        - $ref: "#/components/parameters/ContactID"
      responses:
        "200":
          description: Success - return response of type Contacts array with a unique Contact
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contacts"
              example:
                Id: 5c83b115-a6e8-4f2a-877f-ba63d009235b
                Status: OK
                ProviderName: Xero API Partner
                DateTimeUTC: /Date(1551462703288)/
                Contacts:
                  - ContactID: 8138a266-fb42-49b2-a104-014b7045753d
                    ContactNumber: SB2
                    AccountNumber: "1234567"
                    ContactStatus: ACTIVE
                    Name: Acme Parts Co.
                    FirstName: Blake
                    LastName: Kohler
                    CompanyNumber: NumberBusiness1234
                    EmailAddress: bk@krave.co
                    BankAccountDetails: "12334567"
                    TaxNumber: 123-22-3456
                    AccountsReceivableTaxType: TAX003
                    AccountsPayableTaxType: TAX022
                    Addresses:
                      - AddressType: STREET
                        AddressLine1: 123 Fake Street
                        City: Vancouver
                        Region: British Columbia
                        PostalCode: V6B 2T4
                        Country: ""
                        AttentionTo: ""
                      - AddressType: POBOX
                        AddressLine1: 1234 Fake Street
                        City: Vancouver
                        Region: British Columbia
                        PostalCode: V6B 2T4
                        Country: ""
                        AttentionTo: Blake
                    Phones:
                      - PhoneType: DDI
                        PhoneNumber: 489-44493
                        PhoneAreaCode: "345"
                        PhoneCountryCode: "4"
                      - PhoneType: DEFAULT
                        PhoneNumber: 408-0914
                        PhoneAreaCode: "604"
                        PhoneCountryCode: "1"
                      - PhoneType: FAX
                        PhoneNumber: 123-9933
                        PhoneAreaCode: "123"
                        PhoneCountryCode: "2"
                      - PhoneType: MOBILE
                        PhoneNumber: 999-44
                        PhoneAreaCode: "234"
                        PhoneCountryCode: "3"
                    UpdatedDateUTC: /Date(1551459777193+0000)/
                    ContactGroups: []
                    IsSupplier: true
                    IsCustomer: true
                    SalesDefaultLineAmountType: INCLUSIVE
                    PurchasesDefaultLineAmountType: INCLUSIVE
                    DefaultCurrency: USD
                    Discount: 13.00
                    Website: http://www.google.com
                    BrandingTheme:
                      BrandingThemeID: dabc7637-62c1-4941-8a6e-ee44fa5090e7
                      Name: Standard
                    PurchasesDefaultAccountCode: "660"
                    SalesDefaultAccountCode: "002"
                    BatchPayments:
                      BankAccountNumber: "12334567"
                      BankAccountName: Citi Bank
                      Details: biz checking
                      Code: ""
                      Reference: ""
                    Balances:
                      AccountsReceivable:
                        Outstanding: 118.90
                        Overdue: 136.90
                      AccountsPayable:
                        Outstanding: -43.60
                        Overdue: 40.00
                    PaymentTerms:
                      Bills:
                        Day: 12
                        Type: OFFOLLOWINGMONTH
                      Sales:
                        Day: 14
                        Type: OFCURRENTMONTH
                    ContactPersons:
                      - FirstName: Sue
                        LastName: Johnson
                        EmailAddress: sue.johnson@krave.com
                        IncludeInEmails: true
                    HasAttachments: true
                    Attachments:
                      - AttachmentID: 04e0a3e3-b116-456a-9f32-9706f0d33afa
                        FileName: sample5.jpg
                        Url: https://api.xero.com/api.xro/2.0/contact/8138a266-fb42-49b2-a104-014b7045753d/Attachments/sample5.jpg
                        MimeType: image/jpg
                        ContentLength: 2878711
                    HasValidationErrors: false
    post:
      security:
        - OAuth2:
            - accounting.contacts
      tags:
        - Accounting
      operationId: updateContact
      summary: Updates a specific contact in a Xero organisation
      x-hasAccountingValidationError: true
      x-example:
        - contact:
          is_object: true
          key: contact
          keyPascal: Contact
        - name:
          key: name
          keyPascal: Name
          default: Thanos
          object: contact
        - contactID:
          is_last: true
          is_uuid: true
          key: contactID
          keyPascal: ContactID
          default: 00000000-0000-0000-0000-000000000000
          object: contact
        - contacts:
          is_object: true
          key: contacts
          keyPascal: Contacts
        - add_contact:
          is_last: true
          is_array_add: true
          key: contacts
          keyPascal: Contacts
          java: Contacts
          csharp: Contact
          object: contact
      parameters:
        - $ref: "#/components/parameters/idempotencyKey"
        - $ref: "#/components/parameters/ContactID"
      responses:
        "200":
          description: Success - return response of type Contacts array with an updated Contact
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contacts"
              example:
                Id: 4166b727-c3f0-4881-acd0-d4f7c0e8fcda
                Status: OK
                ProviderName: Xero API Partner
                DateTimeUTC: /Date(1551400031795)/
                Contacts:
                  - ContactID: d5be01fb-b09f-4c3a-9c67-e10c2a03412c
                    ContactStatus: ACTIVE
                    Name: FooBar
                    EmailAddress: sid30680@blah.com
                    BankAccountDetails: ""
                    Addresses:
                      - AddressType: STREET
                        City: ""
                        Region: ""
                        PostalCode: ""
                        Country: ""
                      - AddressType: POBOX
                        City: ""
                        Region: ""
                        PostalCode: ""
                        Country: ""
                    Phones:
                      - PhoneType: DEFAULT
                        PhoneNumber: ""
                        PhoneAreaCode: ""
                        PhoneCountryCode: ""
                      - PhoneType: DDI
                        PhoneNumber: ""
                        PhoneAreaCode: ""
                        PhoneCountryCode: ""
                      - PhoneType: FAX
                        PhoneNumber: ""
                        PhoneAreaCode: ""
                        PhoneCountryCode: ""
                      - PhoneType: MOBILE
                        PhoneNumber: 555-1212
                        PhoneAreaCode: "415"
                        PhoneCountryCode: ""
                    UpdatedDateUTC: /Date(1551400031763+0000)/
                    ContactGroups: []
                    IsSupplier: false
                    IsCustomer: false
                    SalesDefaultLineAmountType: INCLUSIVE
                    PurchasesDefaultLineAmountType: INCLUSIVE
                    SalesTrackingCategories: []
                    PurchasesTrackingCategories: []
                    PaymentTerms:
                      Bills:
                        Day: 15
                        Type: OFCURRENTMONTH
                      Sales:
                        Day: 10
                        Type: DAYSAFTERBILLMONTH
                    ContactPersons: []
                    HasValidationErrors: false
        "400":
          $ref: "#/components/responses/400Error"
      requestBody:
        description: an array of Contacts containing single Contact object with properties to update
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Contacts"
            example:
              Contacts:
                - ContactID: 00000000-0000-0000-0000-000000000000
                  Name: Thanos
  /Contacts/{ContactID}/Attachments:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.attachments
            - accounting.attachments.read
      tags:
        - Accounting
      operationId: getContactAttachments
      x-hasAccountingValidationError: true
      summary: Retrieves attachments for a specific contact in a Xero organisation
      responses:
        "200":
          description: Success - return response of type Attachments array with 0 to N Attachment
          x-isAttachment: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Attachments"
              example:
                Id: 0f63b631-a205-496d-b1d2-e6b13a9b497b
                Status: OK
                ProviderName: Xero API Partner
                DateTimeUTC: /Date(1551483890413)/
                Attachments:
                  - AttachmentID: 04e0a3e3-b116-456a-9f32-9706f0d33afa
                    FileName: sample5.jpg
                    Url: https://api.xero.com/api.xro/2.0/Contacts/8138a266-fb42-49b2-a104-014b7045753d/Attachments/sample5.jpg
                    MimeType: image/jpg
                    ContentLength: 2878711
      parameters:
        - $ref: "#/components/parameters/ContactID"
  /Contacts/{ContactID}/Attachments/{AttachmentID}:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.attachments
            - accounting.attachments.read
      tags:
        - Accounting
      operationId: getContactAttachmentById
      summary: Retrieves a specific attachment from a specific contact using a unique attachment Id
      parameters:
        - $ref: "#/components/parameters/ContactID"
        - $ref: "#/components/parameters/AttachmentID"
        - $ref: "#/components/parameters/ContentType"
      responses:
        "200":
          description: Success - return response of attachment for Contact as binary data
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /Contacts/{ContactID}/Attachments/{FileName}:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.attachments
            - accounting.attachments.read
      tags:
        - Accounting
      operationId: getContactAttachmentByFileName
      summary: Retrieves a specific attachment from a specific contact by file name
      parameters:
        - $ref: "#/components/parameters/ContactID"
        - $ref: "#/components/parameters/FileName"
        - $ref: "#/components/parameters/ContentType"
      responses:
        "200":
          description: Success - return response of attachment for Contact as binary data
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
    post:
      security:
        - OAuth2:
            - accounting.attachments
      tags:
        - Accounting
      operationId: updateContactAttachmentByFileName
      x-hasAccountingValidationError: true
      parameters:
        - $ref: "#/components/parameters/idempotencyKey"
        - $ref: "#/components/parameters/ContactID"
        - $ref: "#/components/parameters/FileName"
      responses:
        "200":
          description: Success - return response of type Attachments array with an updated Attachment
          x-isAttachment: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Attachments"
              example:
                Id: 8543ae1a-297c-49b8-bf91-47decac452d5
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1551485146555)/
                Attachments:
                  - AttachmentID: 8b537c1b-bbb5-47fd-857e-370c369dda7c
                    FileName: HelloWorld.jpg
                    Url: https://api.xero.com/api.xro/2.0/Contacts/8138a266-fb42-49b2-a104-014b7045753d/Attachments/HelloWorld.jpg
                    MimeType: image/jpg
                    ContentLength: 2878711
        "400":
          $ref: "#/components/responses/400Error"
      requestBody:
        required: true
        description: Byte array of file in body of request
        content:
          application/octet-stream:
            schema:
              type: string
              format: byte
    put:
      security:
        - OAuth2:
            - accounting.attachments
      tags:
        - Accounting
      operationId: createContactAttachmentByFileName
      x-hasAccountingValidationError: true
      parameters:
        - $ref: "#/components/parameters/idempotencyKey"
        - $ref: "#/components/parameters/ContactID"
        - $ref: "#/components/parameters/FileName"
      responses:
        "200":
          description: Success - return response of type Attachments array with an newly created Attachment
          x-isAttachment: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Attachments"
              example:
                Id: a5eddf71-86aa-42f5-99e2-0aaf9caf96b6
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1551484292734)/
                Attachments:
                  - AttachmentID: 27e37b01-6996-4ebe-836c-95fd472ad674
                    FileName: sample5.jpg
                    Url: https://api.xero.com/api.xro/2.0/Contacts/8138a266-fb42-49b2-a104-014b7045753d/Attachments/sample5.jpg
                    MimeType: image/jpg
                    ContentLength: 2878711
        "400":
          $ref: "#/components/responses/400Error"
      requestBody:
        required: true
        description: Byte array of file in body of request
        content:
          application/octet-stream:
            schema:
              type: string
              format: byte
  /Contacts/{ContactID}/CISSettings:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.settings
            - accounting.settings.read
      tags:
        - Accounting
      operationId: getContactCISSettings
      summary: Retrieves CIS settings for a specific contact in a Xero organisation
      parameters:
        - $ref: "#/components/parameters/ContactID"
      responses:
        "200":
          description: Success - return response of type CISSettings for a specific Contact
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CISSettings"
              example:
                CISSetting:
                  - CISContractorEnabled: true
                    CISSubContractorEnabled: true
                    Rate: 100
  /Contacts/{ContactID}/History:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.contacts
            - accounting.contacts.read
      tags:
        - Accounting
      operationId: getContactHistory
      summary: Retrieves history records for a specific contact
      parameters:
        - $ref: "#/components/parameters/ContactID"
      responses:
        "200":
          $ref: "#/components/responses/HistoryRetrieved"
    put:
      security:
        - OAuth2:
            - accounting.contacts
      tags:
        - Accounting
      operationId: createContactHistory
      summary: Creates a new history record for a specific contact
      x-hasAccountingValidationError: true
      x-example:
        - historyRecord:
          is_object: true
          key: historyRecord
          keyPascal: HistoryRecord
          keySnake: history_record
        - Details:
          is_last: true
          key: details
          keyPascal: Details
          default: Hello World
          object: historyRecord
        - historyRecords:
          is_object: true
          key: historyRecords
          keyPascal: HistoryRecords
        - add_historyRecord:
          is_last: true
          is_array_add: true
          key: historyRecords
          keyPascal: HistoryRecords
          keySnake: history_records
          java: HistoryRecords
          python: history_record
          ruby: history_record
          csharp: HistoryRecord
          object: historyRecord
      parameters:
        - $ref: "#/components/parameters/idempotencyKey"
        - $ref: "#/components/parameters/ContactID"
      requestBody:
        $ref: "#/components/requestBodies/historyRecords"
      responses:
        "200":
          $ref: "#/components/responses/HistoryRecordCreated"
        "400":
          $ref: "#/components/responses/400Error"
  /ContactGroups:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.contacts
            - accounting.contacts.read
      tags:
        - Accounting
      operationId: getContactGroups
      summary: Retrieves the contact Id and name of each contact group
      parameters:
        - in: query
          name: where
          description: Filter by an any element
          example: Status=="ACTIVE"
          x-example-csharp: Status==\"ACTIVE\"
          x-example-java: Status==&quot;&apos; + ContactGroup.StatusEnum.ACTIVE + &apos;&quot;
          x-example-php: Status==&quot;&apos; . \XeroAPI\XeroPHP\Models\Accounting\ContactGroup::STATUS_ACTIVE . &apos;&quot;
          x-example-ruby: Status==#{XeroRuby::Accounting::ContactGroup::ACTIVE}
          schema:
            type: string
        - in: query
          name: order
          description: Order by an any element
          example: Name ASC
          schema:
            type: string
      responses:
        "200":
          description: Success - return response of type Contact Groups array of Contact Group
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactGroups"
              example:
                Id: b825df86-1a72-49c9-97dd-36afc7d04bd5
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1551746015603)/
                ContactGroups:
                  - ContactGroupID: d7a86b80-8dac-4d89-a334-9dcf5753676c
                    Name: Suppliers
                    Status: ACTIVE
                    Contacts: []
                    HasValidationErrors: false
                  - ContactGroupID: ab089fd4-012f-4043-a6e4-e7be01e87e50
                    Name: Old Group84262
                    Status: ACTIVE
                    Contacts: []
                    HasValidationErrors: false
    put:
      security:
        - OAuth2:
            - accounting.contacts
      tags:
        - Accounting
      operationId: createContactGroup
      summary: Creates a contact group
      parameters:
        - $ref: "#/components/parameters/idempotencyKey"
      x-hasAccountingValidationError: true
      x-example:
        - contact:
          is_object: true
          key: contactGroup
          keyPascal: ContactGroup
          keySnake: contact_group
        - name:
          is_last: true
          key: name
          keyPascal: Name
          default: VIPs
          object: contactGroup
        - contactGroups:
          is_object: true
          key: contactGroups
          keyPascal: ContactGroups
        - add_ContactGroup:
          is_last: true
          is_array_add: true
          key: contactGroups
          keyPascal: ContactGroups
          keySnake: contact_groups
          java: ContactGroups
          python: contact_group
          ruby: contact_group
          csharp: ContactGroup
          object: contactGroup
      responses:
        "200":
          description: Success - return response of type Contact Groups array of newly created Contact Group
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactGroups"
              example:
                Id: 5afe53f9-2271-45b8-9767-88d023b71d34
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1551745740920)/
                ContactGroups:
                  - ContactGroupID: d7a86b80-8dac-4d89-a334-9dcf5753676c
                    Name: Suppliers
                    Status: ACTIVE
                    Contacts: []
                    HasValidationErrors: false
        "400":
          description: Validation Error - some data was incorrect returns response of type Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                ErrorNumber: 10
                Type: ValidationException
                Message: A validation exception occurred
                Elements:
                  - ContactGroupID: 00000000-0000-0000-0000-000000000000
                    Name: Suppliers
                    Contacts: []
                    HasValidationErrors: true
                    ValidationErrors:
                      - Message: You’ve reached the limit of 100 contact groups.
      requestBody:
        description: ContactGroups with an array of names in request body
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContactGroups"
            example:
              ContactGroups:
                - Name: VIPs
  /ContactGroups/{ContactGroupID}:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.contacts
            - accounting.contacts.read
      tags:
        - Accounting
      operationId: getContactGroup
      summary: Retrieves a specific contact group by using a unique contact group Id
      parameters:
        - $ref: "#/components/parameters/ContactGroupID"
      responses:
        "200":
          description: Success - return response of type Contact Groups array with a specific Contact Group
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactGroups"
              example:
                Id: 079c14f6-2c2d-464e-a2c7-0edf7e465723
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1551746772976)/
                ContactGroups:
                  - ContactGroupID: 17b44ed7-4389-4162-91cb-3dd5766e4e22
                    Name: Oasis
                    Status: ACTIVE
                    Contacts:
                      - ContactID: 4e1753b9-018a-4775-b6aa-1bc7871cfee3
                        Name: Noel Gallagher
                        Addresses: []
                        Phones: []
                        ContactGroups: []
                        ContactPersons: []
                        HasValidationErrors: false
                      - ContactID: 430fa14a-f945-44d3-9f97-5df5e28441b8
                        Name: Liam Gallagher
                        Addresses: []
                        Phones: []
                        ContactGroups: []
                        ContactPersons: []
                        HasValidationErrors: false
                    HasValidationErrors: false
    post:
      security:
        - OAuth2:
            - accounting.contacts
      tags:
        - Accounting
      operationId: updateContactGroup
      summary: Updates a specific contact group
      x-hasAccountingValidationError: true
      x-example:
        - contact:
          is_object: true
          key: contactGroup
          keyPascal: ContactGroup
          keySnake: contact_group
        - name:
          is_last: true
          key: name
          keyPascal: Name
          default: Vendor
          object: contactGroup
        - contactGroups:
          is_object: true
          key: contactGroups
          keyPascal: ContactGroups
        - add_ContactGroup:
          is_last: true
          is_array_add: true
          key: contactGroups
          keyPascal: ContactGroups
          keySnake: contact_groups
          java: ContactGroups
          python: contact_group
          ruby: contact_group
          csharp: ContactGroup
          object: contactGroup
      parameters:
        - $ref: "#/components/parameters/idempotencyKey"
        - $ref: "#/components/parameters/ContactGroupID"
      responses:
        "200":
          description: Success - return response of type Contact Groups array of updated Contact Group
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactGroups"
              example:
                Id: b1ba6cdb-1637-4209-bb92-bd0c593f3243
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1551746288544)/
                ContactGroups:
                  - ContactGroupID: 13f47537-7c1d-4e62-966e-617d76558fc5
                    Name: Supplier Vendor
                    Status: ACTIVE
                    Contacts: []
                    HasValidationErrors: false
        "400":
          $ref: "#/components/responses/400Error"
      requestBody:
        description: an array of Contact groups with Name of specific group to update
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContactGroups"
            example:
              ContactGroups:
                - Name: Suppliers
  /ContactGroups/{ContactGroupID}/Contacts:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    put:
      security:
        - OAuth2:
            - accounting.contacts
      tags:
        - Accounting
      operationId: createContactGroupContacts
      summary: Creates contacts to a specific contact group
      x-hasAccountingValidationError: true
      x-example:
        - contact:
          is_object: true
          key: contact
          keyPascal: Contact
        - contactID:
          is_last: true
          is_uuid: true
          key: contactID
          keyPascal: ContactID
          keySnake: contact_id
          default: 00000000-0000-0000-0000-000000000000
          object: contact
        - contacts:
          is_object: true
          key: contacts
          keyPascal: Contacts
        - add_contact:
          is_last: true
          is_array_add: true
          key: contacts
          keyPascal: Contacts
          java: Contacts
          csharp: Contact
          object: contact
      parameters:
        - $ref: "#/components/parameters/idempotencyKey"
        - $ref: "#/components/parameters/ContactGroupID"
      responses:
        "200":
          description: Success - return response of type Contacts array of added Contacts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contacts"
              example:
                Id: 99db8024-6895-45c8-a1b5-54805aa8689c
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1551747495785)/
                Contacts:
                  - ContactID: a3675fc4-f8dd-4f03-ba5b-f1870566bcd7
                    Addresses: []
                    Phones: []
                    ContactGroups: []
                    ContactPersons: []
                    HasValidationErrors: false
                    ValidationErrors: []
                  - ContactID: 4e1753b9-018a-4775-b6aa-1bc7871cfee3
                    Addresses: []
                    Phones: []
                    ContactGroups: []
                    ContactPersons: []
                    HasValidationErrors: false
                    ValidationErrors: []
        "400":
          $ref: "#/components/responses/400Error"
      requestBody:
        description: Contacts with array of contacts specifying the ContactID to be added to ContactGroup in body of request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Contacts"
            example:
              Contacts:
                - ContactID: a3675fc4-f8dd-4f03-ba5b-f1870566bcd7
                - ContactID: 4e1753b9-018a-4775-b6aa-1bc7871cfee3
    delete:
      security:
        - OAuth2:
            - accounting.contacts
      tags:
        - Accounting
      operationId: deleteContactGroupContacts
      summary: Deletes all contacts from a specific contact group
      parameters:
        - $ref: "#/components/parameters/ContactGroupID"
      responses:
        "204":
          description: Success - return response 204 no content
          x-isEmpty: true
  /ContactGroups/{ContactGroupID}/Contacts/{ContactID}:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    delete:
      security:
        - OAuth2:
            - accounting.contacts
      tags:
        - Accounting
      operationId: deleteContactGroupContact
      summary: Deletes a specific contact from a contact group using a unique contact Id
      parameters:
        - $ref: "#/components/parameters/ContactGroupID"
        - $ref: "#/components/parameters/ContactID"
      responses:
        "204":
          description: Success - return response 204 no content
          x-isEmpty: true
        "400":
          $ref: "#/components/responses/400Error"
  /Invoices:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.transactions
            - accounting.transactions.read
      tags:
        - Accounting
      operationId: getInvoices
      summary: Retrieves sales invoices or purchase bills
      parameters:
        - $ref: "#/components/parameters/ifModifiedSince"
        - in: query
          name: where
          description: Filter by an any element
          example: Status=="DRAFT"
          x-example-java: Status==&quot;&apos; + Invoice.StatusEnum.DRAFT + &apos;&quot;
          x-example-php: Status==&quot;&apos; . \XeroAPI\XeroPHP\Models\Accounting\Invoice::STATUS_DRAFT . &apos;&quot;
          x-example-ruby: Status==#{XeroRuby::Accounting::Invoice::DRAFT}
          x-example-csharp: Status==\"DRAFT\"
          schema:
            type: string
        - in: query
          name: order
          description: Order by an any element
          example: InvoiceNumber ASC
          schema:
            type: string
        - in: query
          name: IDs
          x-snake: ids
          description: Filter by a comma-separated list of InvoicesIDs.
          style: form
          explode: false
          example: "&quot;00000000-0000-0000-0000-000000000000&quot;"
          x-example-java: Arrays.asList(UUID.fromString("00000000-0000-0000-0000-000000000000"))
          x-example-php: "&quot;00000000-0000-0000-0000-000000000000&quot;"
          x-example-csharp: new List&lt;Guid&gt;{Guid.Parse("00000000-0000-0000-0000-000000000000")};
          schema:
            type: array
            items:
              type: string
              format: uuid
        - in: query
          name: InvoiceNumbers
          x-snake: invoice_numbers
          description: Filter by a comma-separated list of InvoiceNumbers.
          style: form
          explode: false
          example: "&quot;INV-001&quot;, &quot;INV-002&quot;"
          x-example-java: Arrays.asList("INV-001","INV-002")
          x-example-php: "&quot;INV-001&quot;, &quot;INV-002&quot;"
          x-example-csharp: new List&lt;string&gt;{&quotINV-001&quot,&quotINV-002&quot};
          schema:
            type: array
            items:
              type: string
        - in: query
          name: ContactIDs
          x-snake: contact_ids
          description: Filter by a comma-separated list of ContactIDs.
          style: form
          explode: false
          example: "&quot;00000000-0000-0000-0000-000000000000&quot;"
          x-example-java: Arrays.asList(UUID.fromString("00000000-0000-0000-0000-000000000000"))
          x-example-php: "&quot;00000000-0000-0000-0000-000000000000&quot;"
          x-example-csharp: new List&lt;Guid&gt;{Guid.Parse(&quot00000000-0000-0000-0000-000000000000&quot)};
          schema:
            type: array
            items:
              type: string
              format: uuid
        - in: query
          name: Statuses
          x-snake: statuses
          description: Filter by a comma-separated list Statuses. For faster response times we recommend using these explicit parameters instead of passing OR conditions into the Where filter.
          explode: false
          example: "&quot;DRAFT&quot;, &quot;SUBMITTED&quot;"
          x-example-java: Arrays.asList("DRAFT","SUBMITTED")
          x-example-php: "&quot;DRAFT&quot;, &quot;SUBMITTED&quot;"
          x-example-csharp: new List&lt;string&gt;{&quotDRAFT&quot,&quotSUBMITTED&quot};
          schema:
            type: array
            items:
              type: string
        - in: query
          name: page
          description: e.g. page=1 – Up to 100 invoices will be returned in a single API call with line items shown for each invoice
          example: 1
          schema:
            type: integer
        - in: query
          name: includeArchived
          x-snake: include_archived
          description: e.g. includeArchived=true - Invoices with a status of ARCHIVED will be included in the response
          example: true
          x-example-python: "True"
          schema:
            type: boolean
        - in: query
          name: createdByMyApp
          x-snake: created_by_my_app
          description: When set to true you'll only retrieve Invoices created by your app
          example: false
          x-example-python: "False"
          schema:
            type: boolean
        - $ref: "#/components/parameters/unitdp"
        - $ref: "#/components/parameters/summaryOnly"
        - $ref: "#/components/parameters/pageSize"
        - $ref: "#/components/parameters/searchTerm"
      responses:
        "200":
          description: Success - return response of type Invoices array with all Invoices
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invoices"
              example:
                Id: 900c500b-e83c-4ce2-902a-b8ba04751748
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1552326816230)/
                pagination:
                  page: 1
                  pageSize: 100
                  pageCount: 1
                  itemCount: 3
                Invoices:
                  - Type: ACCREC
                    InvoiceID: d4956132-ed94-4dd7-9eaa-aa22dfdf06f2
                    InvoiceNumber: INV-0001
                    Reference: Red Fish, Blue Fish
                    Payments: []
                    CreditNotes: []
                    Prepayments: []
                    Overpayments: []
                    AmountDue: 0.00
                    AmountPaid: 0.00
                    AmountCredited: 0.00
                    SentToContact: true
                    CurrencyRate: 1.000000
                    HasErrors: false
                    IsDiscounted: false
                    HasAttachments: false
                    RepeatingInvoiceID: 428c0d75-909f-4b04-8403-a48dc27283b0
                    Contact:
                      ContactID: a3675fc4-f8dd-4f03-ba5b-f1870566bcd7
                      Name: Barney Rubble-83203
                      Addresses: []
                      Phones: []
                      ContactGroups: []
                      ContactPersons: []
                      HasValidationErrors: false
                    DateString: 2018-10-20T00:00:00
                    Date: /Date(1539993600000+0000)/
                    DueDateString: 2018-12-30T00:00:00
                    DueDate: /Date(1546128000000+0000)/
                    Status: VOIDED
                    LineAmountTypes: Exclusive
                    LineItems: []
                    SubTotal: 40.00
                    TotalTax: 0.00
                    Total: 40.00
                    UpdatedDateUTC: /Date(1541176290160+0000)/
                    CurrencyCode: NZD
                  - Type: ACCREC
                    InvoiceID: 046d8a6d-1ae1-4b4d-9340-5601bdf41b87
                    InvoiceNumber: INV-0002
                    Reference: Red Fish, Blue Fish
                    Payments:
                      - PaymentID: 99ea7f6b-c513-4066-bc27-b7c65dcd76c2
                        Date: /Date(1543449600000+0000)/
                        Amount: 46.00
                        CurrencyRate: 1.000000
                        HasAccount: false
                        HasValidationErrors: false
                    CreditNotes: []
                    Prepayments: []
                    Overpayments: []
                    AmountDue: 0.00
                    AmountPaid: 46.00
                    AmountCredited: 0.00
                    SentToContact: true
                    CurrencyRate: 1.000000
                    HasErrors: false
                    IsDiscounted: false
                    HasAttachments: false
                    Contact:
                      ContactID: a3675fc4-f8dd-4f03-ba5b-f1870566bcd7
                      Name: Barney Rubble-83203
                      Addresses: []
                      Phones: []
                      ContactGroups: []
                      ContactPersons: []
                      HasValidationErrors: false
                    DateString: 2018-10-20T00:00:00
                    Date: /Date(1539993600000+0000)/
                    DueDateString: 2018-12-30T00:00:00
                    DueDate: /Date(1546128000000+0000)/
                    Status: PAID
                    LineAmountTypes: Exclusive
                    LineItems: []
                    SubTotal: 40.00
                    TotalTax: 6.00
                    Total: 46.00
                    UpdatedDateUTC: /Date(1541176592690+0000)/
                    CurrencyCode: NZD
                    FullyPaidOnDate: /Date(1543449600000+0000)/
                  - Type: ACCREC
                    InvoiceID: 7ef31b20-de17-4312-8382-412f869b1510
                    InvoiceNumber: INV-0003
                    Reference: ""
                    Payments: []
                    CreditNotes: []
                    Prepayments: []
                    Overpayments: []
                    AmountDue: 115.00
                    AmountPaid: 0.00
                    AmountCredited: 0.00
                    CurrencyRate: 1.000000
                    HasErrors: false
                    IsDiscounted: false
                    HasAttachments: false
                    Contact:
                      ContactID: a3675fc4-f8dd-4f03-ba5b-f1870566bcd7
                      Name: Barney Rubble-83203
                      Addresses: []
                      Phones: []
                      ContactGroups: []
                      ContactPersons: []
                      HasValidationErrors: false
                    DateString: 2018-11-02T00:00:00
                    Date: /Date(1541116800000+0000)/
                    DueDateString: 2018-11-07T00:00:00
                    DueDate: /Date(1541548800000+0000)/
                    Status: AUTHORISED
                    LineAmountTypes: Exclusive
                    LineItems: []
                    SubTotal: 100.00
                    TotalTax: 15.00
                    Total: 115.00
                    UpdatedDateUTC: /Date(1541176648927+0000)/
                    CurrencyCode: NZD
    put:
      security:
        - OAuth2:
            - accounting.transactions
      tags:
        - Accounting
      operationId: createInvoices
      summary: Creates one or more sales invoices or purchase bills
      x-hasAccountingValidationError: true
      x-example:
        - dateValue:
          is_date: true
          key: dateValue
          keyPascal: Date
          keySnake: date_value
          java_datatype: LocalDate
          default: LocalDate.of(2020, Month.OCTOBER, 10)
          java: LocalDate.of(2020, Month.OCTOBER, 10)
          csharp: new DateTime(2020, 10, 10)
          php: new DateTime('2020-10-10')
          node: "'2020-10-10'"
          python: dateutil.parser.parse('2020-10-10T00:00:00Z')
          ruby: "'YYYY-MM-DD'"
        - dueDateValue:
          is_date: true
          key: dueDateValue
          keyPascal: Date
          keySnake: due_date_value
          java_datatype: LocalDate
          csharp_datatype: DateTime
          default: LocalDate.of(2020, Month.OCTOBER, 28)
          java: LocalDate.of(2020, Month.OCTOBER, 28)
          csharp: new DateTime(2020, 10, 10)
          php: new DateTime('2020-10-28')
          node: "'2020-10-28'"
          python: dateutil.parser.parse('2020-10-28T00:00:00Z')
          ruby: "'YYYY-MM-DD'"
        - contact:
          is_object: true
          key: contact
          keyPascal: Contact
        - contactID:
          is_last: true
          is_uuid: true
          key: contactID
          keyPascal: ContactID
          keySnake: contact_id
          default: 00000000-0000-0000-0000-000000000000
          object: contact
        - lineItemTracking:
          is_object: true
          key: lineItemTracking
          keyPascal: LineItemTracking
          keySnake: line_item_tracking
        - trackingCategoryId:
          is_uuid: true
          key: trackingCategoryID
          keyPascal: TrackingCategoryID
          keySnake: tracking_category_id
          default: 00000000-0000-0000-0000-000000000000
          object: lineItemTracking
        - trackingOptionID:
          is_last: true
          is_uuid: true
          key: trackingOptionID
          keyPascal: TrackingOptionID
          keySnake: tracking_option_id
          default: 00000000-0000-0000-0000-000000000000
          object: lineItemTracking
        - lineItemTrackings:
          is_list: true
          key: lineItemTrackings
          keyPascal: LineItemTracking
          keySnake: line_item_trackings
        - add_lineitemtrackings:
          is_last: true
          is_list_add: true
          key: lineItemTrackings
          keyPascal: LineItemTrackings
          keySnake: line_item_trackings
          python: line_item_tracking
          ruby: line_item_tracking
          object: lineItemTracking
        - lineItem:
          is_object: true
          key: lineItem
          keyPascal: LineItem
          keySnake: line_item
        - description:
          key: description
          keyPascal: Description
          default: Foobar
          object: lineItem
        - quantity:
          nonString: true
          key: quantity
          keyPascal: Quantity
          default: 1.0
          is_money: true
          object: lineItem
        - unitAmount:
          nonString: true
          key: unitAmount
          keyPascal: UnitAmount
          keySnake: unit_amount
          default: 20.0
          is_money: true
          object: lineItem
        - accountCode:
          key: accountCode
          keyPascal: AccountCode
          keySnake: account_code
          default: "000"
          object: lineItem
        - tracking:
          is_last: true
          nonString: true
          key: tracking
          keyPascal: Tracking
          default: lineItemTrackings
          object: lineItem
        - line_items:
          is_list: true
          key: lineItems
          keyPascal: LineItems
          keySnake: line_items
          csharp: LineItem
          java: LineItem
        - add_lineitems:
          is_last: true
          is_list_add: true
          key: lineItems
          keyPascal: LineItems
          keySnake: line_items
          java: LineItems
          python: line_item
          ruby: line_item
          csharp: LineItem
          object: lineItem
        - invoice:
          is_object: true
          key: invoice
          keyPascal: Invoice
        - type:
          nonString: true
          key: type
          keyPascal: Type
          default: ACCREC
          php: XeroAPI\XeroPHP\Models\Accounting\Invoice::TYPE_ACCREC
          node: Invoice.TypeEnum.ACCREC
          ruby: XeroRuby::Accounting::Invoice::ACCREC
          python_string: ACCREC
          java: com.xero.models.accounting.Invoice.TypeEnum.ACCREC
          csharp: Invoice.TypeEnum.ACCREC
          object: invoice
        - set_contact:
          is_variable: true
          nonString: true
          key: contact
          keyPascal: Contact
          default: contact
          object: invoice
        - date:
          is_variable: true
          nonString: true
          key: date
          keyPascal: Date
          default: dateValue
          python: date_value
          ruby: date_value
          object: invoice
        - dueDate:
          is_variable: true
          nonString: true
          key: dueDate
          keyPascal: DueDate
          keySnake: due_date
          default: dueDateValue
          python: due_date_value
          ruby: due_date_value
          object: invoice
        - set_lineitem:
          is_variable: true
          nonString: true
          key: lineItems
          keyPascal: LineItems
          keySnake: line_items
          default: lineItems
          python: line_items
          ruby: line_items
          object: invoice
        - reference:
          key: reference
          keyPascal: Reference
          default: Website Design
          object: invoice
        - status:
          is_last: true
          nonString: true
          key: status
          keyPascal: Status
          default: DRAFT
          php: XeroAPI\XeroPHP\Models\Accounting\Invoice::STATUS_DRAFT
          node: Invoice.StatusEnum.DRAFT
          ruby: XeroRuby::Accounting::Invoice::DRAFT
          python_string: DRAFT
          java: com.xero.models.accounting.Invoice.StatusEnum.DRAFT
          csharp: Invoice.StatusEnum.DRAFT
          object: invoice
        - invoices:
          is_object: true
          key: invoices
          keyPascal: Invoices
        - add_invoice:
          is_last: true
          is_array_add: true
          key: invoices
          keyPascal: Invoices
          java: Invoices
          csharp: Invoice
          object: invoice
      parameters:
        - $ref: "#/components/parameters/summarizeErrors"
        - $ref: "#/components/parameters/unitdp"
        - $ref: "#/components/parameters/idempotencyKey"
      responses:
        "200":
          description: Success - return response of type Invoices array with newly created Invoice
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invoices"
              example:
                Id: ccece84a-075c-4fcd-9073-149d4f7a91cf
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1552327126164)/
                Invoices:
                  - Type: ACCREC
                    InvoiceID: ed255415-e141-4150-aab7-89c3bbbb851c
                    InvoiceNumber: INV-0007
                    Reference: Website Design
                    Prepayments: []
                    Overpayments: []
                    AmountDue: 40.00
                    AmountPaid: 0.00
                    SentToContact: false
                    CurrencyRate: 1.000000
                    HasErrors: false
                    IsDiscounted: false
                    Contact:
                      ContactID: 430fa14a-f945-44d3-9f97-5df5e28441b8
                      ContactStatus: ACTIVE
                      Name: Liam Gallagher
                      FirstName: Liam
                      LastName: Gallagher
                      EmailAddress: liam@rockstar.com
                      BankAccountDetails: ""
                      Addresses:
                        - AddressType: STREET
                          City: ""
                          Region: ""
                          PostalCode: ""
                          Country: ""
                          AttentionTo: ""
                        - AddressType: POBOX
                          City: Anytown
                          Region: NY
                          PostalCode: "10101"
                          Country: USA
                          AttentionTo: ""
                      Phones:
                        - PhoneType: DEFAULT
                          PhoneNumber: 222-2222
                          PhoneAreaCode: "212"
                          PhoneCountryCode: ""
                        - PhoneType: DDI
                          PhoneNumber: ""
                          PhoneAreaCode: ""
                          PhoneCountryCode: ""
                        - PhoneType: FAX
                          PhoneNumber: 333-2233
                          PhoneAreaCode: "212"
                          PhoneCountryCode: ""
                        - PhoneType: MOBILE
                          PhoneNumber: 444-3433
                          PhoneAreaCode: "212"
                          PhoneCountryCode: ""
                      UpdatedDateUTC: /Date(1551747281053+0000)/
                      ContactGroups:
                        - ContactGroupID: 17b44ed7-4389-4162-91cb-3dd5766e4e22
                          Name: Oasis
                          Status: ACTIVE
                          Contacts: []
                          HasValidationErrors: false
                      IsSupplier: true
                      IsCustomer: true
                      SalesTrackingCategories: []
                      PurchasesTrackingCategories: []
                      ContactPersons:
                        - FirstName: Debbie
                          LastName: Gwyther
                          EmailAddress: debbie@rockstar.com
                          IncludeInEmails: false
                      HasValidationErrors: false
                    DateString: 2019-03-11T00:00:00
                    Date: /Date(1552262400000+0000)/
                    DueDateString: 2018-12-10T00:00:00
                    DueDate: /Date(1544400000000+0000)/
                    Status: AUTHORISED
                    LineAmountTypes: Exclusive
                    LineItems:
                      - Description: Acme Tires
                        UnitAmount: 20.00
                        TaxType: NONE
                        TaxAmount: 0.00
                        LineAmount: 40.00
                        AccountCode: "200"
                        Tracking: []
                        Quantity: 2.0000
                        LineItemID: 5f7a612b-fdcc-4d33-90fa-a9f6bc6db32f
                        ValidationErrors: []
                    SubTotal: 40.00
                    TotalTax: 0.00
                    Total: 40.00
                    UpdatedDateUTC: /Date(1552327126117+0000)/
                    CurrencyCode: NZD
                    StatusAttributeString: OK
        "400":
          $ref: "#/components/responses/400Error"
      requestBody:
        required: true
        description: Invoices with an array of invoice objects in body of request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Invoices"
            example:
              Invoices:
                - Type: ACCREC
                  Contact:
                    ContactID: 430fa14a-f945-44d3-9f97-5df5e28441b8
                  LineItems:
                    - Description: Acme Tires
                      Quantity: 2
                      UnitAmount: 20
                      AccountCode: "200"
                      TaxType: NONE
                      LineAmount: 40
                  Date: "2019-03-11"
                  DueDate: "2018-12-10"
                  Reference: Website Design
                  Status: AUTHORISED
    post:
      security:
        - OAuth2:
            - accounting.transactions
      tags:
        - Accounting
      operationId: updateOrCreateInvoices
      summary: Updates or creates one or more sales invoices or purchase bills
      x-hasAccountingValidationError: true
      x-example:
        - dateValue:
          is_date: true
          key: dateValue
          keyPascal: Date
          keySnake: date_value
          java_datatype: LocalDate
          default: LocalDate.of(2020, Month.OCTOBER, 10)
          java: LocalDate.of(2020, Month.OCTOBER, 10)
          csharp: new DateTime(2020, 10, 10)
          php: new DateTime('2020-10-10')
          node: "'2020-10-10'"
          python: dateutil.parser.parse('2020-10-10T00:00:00Z')
          ruby: "'YYYY-MM-DD'"
        - dueDateValue:
          is_date: true
          key: dueDateValue
          keyPascal: Date
          keySnake: due_date_value
          java_datatype: LocalDate
          default: LocalDate.of(2020, Month.OCTOBER, 28)
          java: LocalDate.of(2020, Month.OCTOBER, 28)
          csharp: new DateTime(2020, 10, 10)
          php: new DateTime('2020-10-28')
          node: "'2020-10-28'"
          python: dateutil.parser.parse('2020-10-28T00:00:00Z')
          ruby: "'YYYY-MM-DD'"
        - contact:
          is_object: true
          key: contact
          keyPascal: Contact
        - contactID:
          is_last: true
          is_uuid: true
          key: contactID
          keyPascal: ContactID
          keySnake: contact_id
          default: 00000000-0000-0000-0000-000000000000
          object: contact
        - lineItem:
          is_object: true
          key: lineItem
          keyPascal: LineItem
          keySnake: line_item
        - description:
          key: description
          keyPascal: Description
          default: Foobar
          object: lineItem
        - quantity:
          nonString: true
          key: quantity
          keyPascal: Quantity
          default: 1.0
          is_money: true
          object: lineItem
        - unitAmount:
          nonString: true
          key: unitAmount
          keyPascal: UnitAmount
          keySnake: unit_amount
          default: 20.0
          is_money: true
          object: lineItem
        - accountCode:
          is_last: true
          key: accountCode
          keyPascal: AccountCode
          keySnake: account_code
          default: "000"
          object: lineItem
        - line_items:
          is_list: true
          key: lineItems
          keyPascal: LineItems
          keySnake: line_items
          csharp: LineItem
          java: LineItem
        - add_lineitems:
          is_last: true
          is_list_add: true
          key: lineItems
          keyPascal: LineItems
          keySnake: line_items
          java: LineItems
          python: line_item
          ruby: line_item
          csharp: LineItem
          object: lineItem
        - invoice:
          is_object: true
          key: invoice
          keyPascal: Invoice
        - type:
          nonString: true
          key: type
          keyPascal: Type
          default: ACCREC
          php: XeroAPI\XeroPHP\Models\Accounting\Invoice::TYPE_ACCREC
          node: Invoice.TypeEnum.ACCREC
          ruby: XeroRuby::Accounting::Invoice::ACCREC
          python_string: ACCREC
          java: com.xero.models.accounting.Invoice.TypeEnum.ACCREC
          csharp: Invoice.TypeEnum.ACCREC
          object: invoice
        - set_contact:
          is_variable: true
          nonString: true
          key: contact
          keyPascal: Contact
          default: contact
          object: invoice
        - date:
          is_variable: true
          nonString: true
          key: date
          keyPascal: Date
          default: dateValue
          python: date_value
          ruby: date_value
          object: invoice
        - dueDate:
          is_variable: true
          nonString: true
          key: dueDate
          keyPascal: Date
          keySnake: due_date
          default: dueDateValue
          python: due_date_value
          ruby: due_date_value
          object: invoice
        - set_lineitem:
          is_variable: true
          nonString: true
          key: lineItems
          keyPascal: LineItems
          keySnake: line_items
          default: lineItems
          python: line_items
          ruby: line_items
          object: invoice
        - reference:
          key: reference
          keyPascal: Reference
          default: Website Design
          object: invoice
        - status:
          is_last: true
          nonString: true
          key: status
          keyPascal: Status
          default: DRAFT
          php: XeroAPI\XeroPHP\Models\Accounting\Invoice::STATUS_DRAFT
          node: Invoice.StatusEnum.DRAFT
          ruby: XeroRuby::Accounting::Invoice::DRAFT
          python_string: DRAFT
          java: com.xero.models.accounting.Invoice.StatusEnum.DRAFT
          csharp: Invoice.StatusEnum.DRAFT
          object: invoice
        - invoices:
          is_object: true
          key: invoices
          keyPascal: Invoices
        - add_invoice:
          is_last: true
          is_array_add: true
          key: invoices
          keyPascal: Invoices
          java: Invoices
          csharp: Invoice
          object: invoice
      parameters:
        - $ref: "#/components/parameters/summarizeErrors"
        - $ref: "#/components/parameters/unitdp"
        - $ref: "#/components/parameters/idempotencyKey"
      responses:
        "200":
          description: Success - return response of type Invoices array with newly created Invoice
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invoices"
              example:
                Id: ccece84a-075c-4fcd-9073-149d4f7a91cf
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1552327126164)/
                Invoices:
                  - Type: ACCREC
                    InvoiceID: ed255415-e141-4150-aab7-89c3bbbb851c
                    InvoiceNumber: INV-0007
                    Reference: Website Design
                    Prepayments: []
                    Overpayments: []
                    AmountDue: 40.00
                    AmountPaid: 0.00
                    SentToContact: false
                    CurrencyRate: 1.000000
                    HasErrors: false
                    IsDiscounted: false
                    Contact:
                      ContactID: 430fa14a-f945-44d3-9f97-5df5e28441b8
                      ContactStatus: ACTIVE
                      Name: Liam Gallagher
                      FirstName: Liam
                      LastName: Gallagher
                      EmailAddress: liam@rockstar.com
                      BankAccountDetails: ""
                      Addresses:
                        - AddressType: STREET
                          City: ""
                          Region: ""
                          PostalCode: ""
                          Country: ""
                          AttentionTo: ""
                        - AddressType: POBOX
                          City: Anytown
                          Region: NY
                          PostalCode: "10101"
                          Country: USA
                          AttentionTo: ""
                      Phones:
                        - PhoneType: DEFAULT
                          PhoneNumber: 222-2222
                          PhoneAreaCode: "212"
                          PhoneCountryCode: ""
                        - PhoneType: DDI
                          PhoneNumber: ""
                          PhoneAreaCode: ""
                          PhoneCountryCode: ""
                        - PhoneType: FAX
                          PhoneNumber: 333-2233
                          PhoneAreaCode: "212"
                          PhoneCountryCode: ""
                        - PhoneType: MOBILE
                          PhoneNumber: 444-3433
                          PhoneAreaCode: "212"
                          PhoneCountryCode: ""
                      UpdatedDateUTC: /Date(1551747281053+0000)/
                      ContactGroups:
                        - ContactGroupID: 17b44ed7-4389-4162-91cb-3dd5766e4e22
                          Name: Oasis
                          Status: ACTIVE
                          Contacts: []
                          HasValidationErrors: false
                      IsSupplier: true
                      IsCustomer: true
                      SalesTrackingCategories: []
                      PurchasesTrackingCategories: []
                      ContactPersons:
                        - FirstName: Debbie
                          LastName: Gwyther
                          EmailAddress: debbie@rockstar.com
                          IncludeInEmails: false
                      HasValidationErrors: false
                    DateString: 2019-03-11T00:00:00
                    Date: /Date(1552262400000+0000)/
                    DueDateString: 2018-12-10T00:00:00
                    DueDate: /Date(1544400000000+0000)/
                    Status: AUTHORISED
                    LineAmountTypes: Exclusive
                    LineItems:
                      - Description: Acme Tires
                        UnitAmount: 20.00
                        TaxType: NONE
                        TaxAmount: 0.00
                        LineAmount: 40.00
                        AccountCode: "200"
                        Tracking: []
                        Quantity: 2.0000
                        LineItemID: 5f7a612b-fdcc-4d33-90fa-a9f6bc6db32f
                        ValidationErrors: []
                    SubTotal: 40.00
                    TotalTax: 0.00
                    Total: 40.00
                    UpdatedDateUTC: /Date(1552327126117+0000)/
                    CurrencyCode: NZD
                    StatusAttributeString: OK
        "400":
          $ref: "#/components/responses/400Error"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Invoices"
            example:
              Invoices:
                - Type: ACCREC
                  Contact:
                    ContactID: 430fa14a-f945-44d3-9f97-5df5e28441b8
                  LineItems:
                    - Description: Acme Tires
                      Quantity: 2
                      UnitAmount: 20
                      AccountCode: "200"
                      TaxType: NONE
                      LineAmount: 40
                  Date: "2019-03-11"
                  DueDate: "2018-12-10"
                  Reference: Website Design
                  Status: AUTHORISED
  /Invoices/{InvoiceID}:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.transactions
            - accounting.transactions.read
      tags:
        - Accounting
      operationId: getInvoice
      summary: Retrieves a specific sales invoice or purchase bill using a unique invoice Id
      parameters:
        - $ref: "#/components/parameters/InvoiceID"
        - $ref: "#/components/parameters/unitdp"
      responses:
        "200":
          description: Success - return response of type Invoices array with specified Invoices
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invoices"
              example:
                Id: 516f400a-b764-4c88-831b-12d2b210fa24
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1551981658323)/
                Invoices:
                  - Type: ACCREC
                    InvoiceID: a03ffcd2-5d91-4c7e-b483-318584e9e439
                    InvoiceNumber: INV-0006
                    Reference: Tour
                    Payments:
                      - PaymentID: 38928000-e9a0-420c-8884-f624bab2a351
                        Date: /Date(1552953600000+0000)/
                        Amount: 148062.76
                        Reference: Yahoo
                        CurrencyRate: 1.000000
                        HasAccount: false
                        HasValidationErrors: false
                    Prepayments: []
                    Overpayments: []
                    AmountDue: 0.00
                    AmountPaid: 148062.76
                    SentToContact: false
                    CurrencyRate: 1.000000
                    HasErrors: false
                    IsDiscounted: false
                    HasAttachments: true
                    Attachments:
                      - AttachmentID: 3a2fe7e0-fac7-4ea2-afb2-31cedaabd294
                        FileName: helo-heros.jpg
                        Url: https://api.xero.com/api.xro/2.0/Invoices/a03ffcd2-5d91-4c7e-b483-318584e9e439/Attachments/helo-heros.jpg
                        MimeType: image/jpeg
                        ContentLength: 2878711
                    Contact:
                      ContactID: 430fa14a-f945-44d3-9f97-5df5e28441b8
                      ContactStatus: ACTIVE
                      Name: Liam Gallagher
                      FirstName: Liam
                      LastName: Gallagher
                      EmailAddress: liam@rockstar.com
                      BankAccountDetails: ""
                      Addresses:
                        - AddressType: STREET
                          City: ""
                          Region: ""
                          PostalCode: ""
                          Country: ""
                          AttentionTo: ""
                        - AddressType: POBOX
                          City: Anytown
                          Region: NY
                          PostalCode: "10101"
                          Country: USA
                          AttentionTo: ""
                      Phones:
                        - PhoneType: DEFAULT
                          PhoneNumber: 222-2222
                          PhoneAreaCode: "212"
                          PhoneCountryCode: ""
                        - PhoneType: DDI
                          PhoneNumber: ""
                          PhoneAreaCode: ""
                          PhoneCountryCode: ""
                        - PhoneType: FAX
                          PhoneNumber: 333-2233
                          PhoneAreaCode: "212"
                          PhoneCountryCode: ""
                        - PhoneType: MOBILE
                          PhoneNumber: 444-3433
                          PhoneAreaCode: "212"
                          PhoneCountryCode: ""
                      UpdatedDateUTC: /Date(1551747281053+0000)/
                      ContactGroups:
                        - ContactGroupID: 17b44ed7-4389-4162-91cb-3dd5766e4e22
                          Name: Oasis
                          Status: ACTIVE
                          Contacts: []
                          HasValidationErrors: false
                      IsSupplier: true
                      IsCustomer: true
                      SalesTrackingCategories: []
                      PurchasesTrackingCategories: []
                      ContactPersons:
                        - FirstName: Debbie
                          LastName: Gwyther
                          EmailAddress: debbie@rockstar.com
                          IncludeInEmails: false
                      HasValidationErrors: false
                    DateString: 2019-03-07T00:00:00
                    Date: /Date(1551916800000+0000)/
                    DueDateString: 2019-03-13T00:00:00
                    DueDate: /Date(1552435200000+0000)/
                    Status: PAID
                    LineAmountTypes: Exclusive
                    LineItems:
                      - ItemCode: "123"
                        Description: Guitars Fender Strat
                        UnitAmount: 148062.76
                        TaxType: NONE
                        TaxAmount: 0.00
                        LineAmount: 148062.76
                        AccountCode: "200"
                        Tracking: []
                        Quantity: 1.0000
                        LineItemID: b18f39d9-7739-4246-9288-72afe939d2d5
                        ValidationErrors: []
                    SubTotal: 148062.76
                    TotalTax: 0.00
                    Total: 148062.76
                    UpdatedDateUTC: /Date(1551981568133+0000)/
                    CurrencyCode: NZD
                    FullyPaidOnDate: /Date(1552953600000+0000)/
                    StatusAttributeString: ERROR
                    ValidationErrors:
                      - Message: "Invoice # must be unique."
    post:
      security:
        - OAuth2:
            - accounting.transactions
      tags:
        - Accounting
      operationId: updateInvoice
      summary: Updates a specific sales invoices or purchase bills
      x-hasAccountingValidationError: true
      x-example:
        - invoice:
          is_object: true
          key: invoice
          keyPascal: Invoice
        - reference:
          is_last: true
          key: reference
          keyPascal: Reference
          default: I am Iron man
          object: invoice
        - invoices:
          is_object: true
          key: invoices
          keyPascal: Invoices
        - add_invoice:
          is_last: true
          is_array_add: true
          key: invoices
          keyPascal: Invoices
          java: Invoices
          csharp: Invoice
          object: invoice
      parameters:
        - $ref: "#/components/parameters/InvoiceID"
        - $ref: "#/components/parameters/unitdp"
        - $ref: "#/components/parameters/idempotencyKey"
      responses:
        "200":
          description: Success - return response of type Invoices array with updated Invoice
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invoices"
              example:
                Id: bd83b60e-9d16-4a3b-9f59-0a2d0ccd35f2
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1552329729002)/
                Invoices:
                  - Type: ACCREC
                    InvoiceID: 4074292c-09b3-456d-84e7-add864c6c39b
                    InvoiceNumber: INV-0008
                    Reference: My the Force be With You
                    Prepayments: []
                    Overpayments: []
                    AmountDue: 575.00
                    AmountPaid: 0.00
                    SentToContact: false
                    CurrencyRate: 1.000000
                    HasErrors: false
                    IsDiscounted: false
                    Contact:
                      ContactID: be392c72-c121-4f83-9512-03ac71e54c20
                      ContactStatus: ACTIVE
                      Name: Luke Skywalker
                      EmailAddress: ""
                      BankAccountDetails: ""
                      Addresses:
                        - AddressType: STREET
                          City: ""
                          Region: ""
                          PostalCode: ""
                          Country: ""
                        - AddressType: POBOX
                          City: ""
                          Region: ""
                          PostalCode: ""
                          Country: ""
                      Phones:
                        - PhoneType: DEFAULT
                          PhoneNumber: ""
                          PhoneAreaCode: ""
                          PhoneCountryCode: ""
                        - PhoneType: DDI
                          PhoneNumber: ""
                          PhoneAreaCode: ""
                          PhoneCountryCode: ""
                        - PhoneType: FAX
                          PhoneNumber: ""
                          PhoneAreaCode: ""
                          PhoneCountryCode: ""
                        - PhoneType: MOBILE
                          PhoneNumber: ""
                          PhoneAreaCode: ""
                          PhoneCountryCode: ""
                      UpdatedDateUTC: /Date(1552329691573+0000)/
                      ContactGroups: []
                      IsSupplier: false
                      IsCustomer: true
                      DefaultCurrency: NZD
                      SalesTrackingCategories: []
                      PurchasesTrackingCategories: []
                      ContactPersons: []
                      HasValidationErrors: false
                    DateString: 2019-03-11T00:00:00
                    Date: /Date(1552262400000+0000)/
                    DueDateString: 2019-03-12T00:00:00
                    DueDate: /Date(1552348800000+0000)/
                    Status: SUBMITTED
                    LineAmountTypes: Exclusive
                    LineItems:
                      - Description: Light Saber
                        UnitAmount: 500.00
                        TaxType: OUTPUT2
                        TaxAmount: 75.00
                        LineAmount: 500.00
                        AccountCode: "200"
                        Tracking: []
                        Quantity: 1.0000
                        LineItemID: 6de1bf9f-de95-4c47-9287-37305db758c9
                        ValidationErrors: []
                    SubTotal: 500.00
                    TotalTax: 75.00
                    Total: 575.00
                    UpdatedDateUTC: /Date(1552329728987+0000)/
                    CurrencyCode: NZD
        "400":
          $ref: "#/components/responses/400Error"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Invoices"
            example:
              Invoices:
                - Reference: May the force be with you
                  InvoiceID: 00000000-0000-0000-0000-000000000000
                  LineItems: []
                  Contact: {}
                  Type: ACCPAY
  /Invoices/{InvoiceID}/pdf:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.transactions
            - accounting.transactions.read
      tags:
        - Accounting
      operationId: getInvoiceAsPdf
      x-path: /Invoices/{InvoiceID}
      summary: Retrieves invoices or purchase bills as PDF files
      parameters:
        - $ref: "#/components/parameters/InvoiceID"
      responses:
        "200":
          description: Success - return response of byte array pdf version of specified Invoices
          content:
            application/pdf:
              schema:
                type: string
                format: binary
  /Invoices/{InvoiceID}/Attachments:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.attachments
            - accounting.attachments.read
      tags:
        - Accounting
      operationId: getInvoiceAttachments
      summary: Retrieves attachments for a specific invoice or purchase bill
      parameters:
        - $ref: "#/components/parameters/InvoiceID"
      responses:
        "200":
          description: Success - return response of type Attachments array of Attachments for specified Invoices
          x-isAttachment: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Attachments"
              example:
                Id: 7e357a45-69f5-4e8f-8d7b-15da8ef50aab
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1552330258523)/
                Attachments:
                  - AttachmentID: 9808ad7f-c8d4-41cf-995e-bc29cb76fd2c
                    FileName: foobar.jpg
                    Url: https://api.xero.com/api.xro/2.0/Invoices/4074292c-09b3-456d-84e7-add864c6c39b/Attachments/foobar.jpg
                    MimeType: image/jpg
                    ContentLength: 2878711
                  - AttachmentID: 5a500c1a-5a02-48de-939e-1d234fd170d4
                    FileName: sample5.jpg
                    Url: https://api.xero.com/api.xro/2.0/Invoices/4074292c-09b3-456d-84e7-add864c6c39b/Attachments/sample5.jpg
                    MimeType: image/jpg
                    ContentLength: 2878711
  /Invoices/{InvoiceID}/Attachments/{AttachmentID}:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.attachments
            - accounting.attachments.read
      tags:
        - Accounting
      operationId: getInvoiceAttachmentById
      summary: Retrieves a specific attachment from a specific invoices or purchase bills by using a unique attachment Id
      parameters:
        - $ref: "#/components/parameters/InvoiceID"
        - $ref: "#/components/parameters/AttachmentID"
        - $ref: "#/components/parameters/ContentType"
      responses:
        "200":
          description: Success - return response of attachment for Invoice as binary data
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /Invoices/{InvoiceID}/Attachments/{FileName}:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.attachments
            - accounting.attachments.read
      tags:
        - Accounting
      operationId: getInvoiceAttachmentByFileName
      summary: Retrieves an attachment from a specific invoice or purchase bill by filename
      parameters:
        - $ref: "#/components/parameters/InvoiceID"
        - $ref: "#/components/parameters/FileName"
        - $ref: "#/components/parameters/ContentType"
      responses:
        "200":
          description: Success - return response of attachment for Invoice as binary data
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
    post:
      security:
        - OAuth2:
            - accounting.attachments
      tags:
        - Accounting
      operationId: updateInvoiceAttachmentByFileName
      x-hasAccountingValidationError: true
      summary: Updates an attachment from a specific invoices or purchase bill by filename
      parameters:
        - $ref: "#/components/parameters/idempotencyKey"
        - $ref: "#/components/parameters/InvoiceID"
        - $ref: "#/components/parameters/FileName"
      responses:
        "200":
          description: Success - return response of type Attachments array with updated Attachment
          x-isAttachment: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Attachments"
              example:
                Id: acd7d618-5fef-4d45-849c-a339ea31a973
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1552330524005)/
                Attachments:
                  - AttachmentID: 08085449-fda3-45f4-a685-ff44c8a29ee3
                    FileName: HelloWorld.jpg
                    Url: https://api.xero.com/api.xro/2.0/Invoices/4074292c-09b3-456d-84e7-add864c6c39b/Attachments/HelloWorld.jpg
                    MimeType: image/jpg
                    ContentLength: 2878711
        "400":
          $ref: "#/components/responses/400Error"
      requestBody:
        required: true
        description: Byte array of file in body of request
        content:
          application/octet-stream:
            schema:
              type: string
              format: byte
    put:
      security:
        - OAuth2:
            - accounting.attachments
      tags:
        - Accounting
      operationId: createInvoiceAttachmentByFileName
      x-hasAccountingValidationError: true
      summary: Creates an attachment for a specific invoice or purchase bill by filename
      parameters:
        - $ref: "#/components/parameters/InvoiceID"
        - $ref: "#/components/parameters/FileName"
        - $ref: "#/components/parameters/includeOnline"
        - $ref: "#/components/parameters/idempotencyKey"
      responses:
        "200":
          description: Success - return response of type Attachments array with newly created Attachment
          x-isAttachment: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Attachments"
              example:
                Id: 971fbd18-c850-453a-825f-63f2fee096ee
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1552330001318)/
                Attachments:
                  - AttachmentID: 5a500c1a-5a02-48de-939e-1d234fd170d4
                    FileName: sample5.jpg
                    Url: https://api.xero.com/api.xro/2.0/Invoices/4074292c-09b3-456d-84e7-add864c6c39b/Attachments/sample5.jpg
                    MimeType: image/jpg
                    ContentLength: 2878711
        "400":
          $ref: "#/components/responses/400Error"
      requestBody:
        required: true
        description: Byte array of file in body of request
        content:
          application/octet-stream:
            schema:
              type: string
              format: byte
  /Invoices/{InvoiceID}/OnlineInvoice:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.transactions
            - accounting.transactions.read
      tags:
        - Accounting
      operationId: getOnlineInvoice
      summary: Retrieves a URL to an online invoice
      parameters:
        - $ref: "#/components/parameters/InvoiceID"
      responses:
        "200":
          description: Success - return response of type OnlineInvoice array with one OnlineInvoice
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OnlineInvoices"
              example:
                Id: d20705fb-fe1c-4366-835b-98de7474da3c
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1552331100745)/
                OnlineInvoices:
                  - OnlineInvoiceUrl: https://in.xero.com/bCWCCfytGdTXoJam9HENWlQt07G6zcDaj4gQojHu
  /Invoices/{InvoiceID}/Email:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    post:
      security:
        - OAuth2:
            - accounting.transactions
      tags:
        - Accounting
      operationId: emailInvoice
      summary: Sends a copy of a specific invoice to related contact via email
      x-hasAccountingValidationError: true
      x-example:
        - requestEmpty:
          is_last: true
          is_object: true
          key: requestEmpty
          keyPascal: RequestEmpty
      parameters:
        - $ref: "#/components/parameters/idempotencyKey"
        - $ref: "#/components/parameters/InvoiceID"
      responses:
        "204":
          description: Success - return response 204 no content
          x-isEmpty: true
        "400":
          $ref: "#/components/responses/400Error"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestEmpty"
            example: {}
  /Invoices/{InvoiceID}/History:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.transactions
            - accounting.transactions.read
      tags:
        - Accounting
      operationId: getInvoiceHistory
      summary: Retrieves history records for a specific invoice
      parameters:
        - $ref: "#/components/parameters/InvoiceID"
      responses:
        "200":
          $ref: "#/components/responses/HistoryRetrieved"
    put:
      security:
        - OAuth2:
            - accounting.transactions
      tags:
        - Accounting
      operationId: createInvoiceHistory
      summary: Creates a history record for a specific invoice
      x-hasAccountingValidationError: true
      x-example:
        - historyRecord:
          is_object: true
          key: historyRecord
          keyPascal: HistoryRecord
          keySnake: history_record
        - Details:
          is_last: true
          key: details
          keyPascal: Details
          default: Hello World
          object: historyRecord
        - historyRecords:
          is_object: true
          key: historyRecords
          keyPascal: HistoryRecords
        - add_historyRecord:
          is_last: true
          is_array_add: true
          key: historyRecords
          keyPascal: HistoryRecords
          keySnake: history_records
          java: HistoryRecords
          python: history_record
          ruby: history_record
          csharp: HistoryRecord
          object: historyRecord
      parameters:
        - $ref: "#/components/parameters/idempotencyKey"
        - $ref: "#/components/parameters/InvoiceID"
      responses:
        "200":
          $ref: "#/components/responses/HistoryRecordCreated"
        "400":
          $ref: "#/components/responses/400Error"
      requestBody:
        $ref: "#/components/requestBodies/historyRecords"
  /InvoiceReminders/Settings:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.settings
            - accounting.settings.read
      tags:
        - Accounting
      operationId: getInvoiceReminders
      summary: Retrieves invoice reminder settings
      responses:
        "200":
          description: Success - return response of Invoice Reminders
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvoiceReminders"
              example:
                Id: c7cd0953-c012-4be8-b618-63ce4c2c3494
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1552331430618)/
                InvoiceReminders:
                  - Enabled: false
  /Items:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.settings
            - accounting.settings.read
      tags:
        - Accounting
      operationId: getItems
      summary: Retrieves items
      parameters:
        - $ref: "#/components/parameters/ifModifiedSince"
        - in: query
          name: where
          description: Filter by an any element
          example: IsSold==true
          schema:
            type: string
        - in: query
          name: order
          description: Order by an any element
          example: Code ASC
          schema:
            type: string
        - $ref: "#/components/parameters/unitdp"
      responses:
        "200":
          description: Success - return response of type Items array with all Item
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items"
              example:
                Id: 8487e8d7-5fb3-4f02-b949-dec8f1e38182
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1552331874897)/
                Items:
                  - ItemID: c8c54d65-f3f2-452d-926e-bf450b12fb07
                    Code: "123"
                    Description: Guitars Fender Strat
                    UpdatedDateUTC: /Date(1551981476267+0000)/
                    PurchaseDetails: {}
                    SalesDetails:
                      UnitPrice: 5000.0000
                      AccountCode: "200"
                      TaxType: OUTPUT2
                    Name: Guitars
                    IsTrackedAsInventory: false
                    IsSold: true
                    IsPurchased: false
                  - ItemID: a4544d51-48f6-441f-a623-99ecbced6ab7
                    Code: abc65591
                    Description: Barfoo
                    UpdatedDateUTC: /Date(1552331873580+0000)/
                    PurchaseDetails: {}
                    SalesDetails: {}
                    Name: Hello11350
                    IsTrackedAsInventory: false
                    IsSold: true
                    IsPurchased: true
    put:
      security:
        - OAuth2:
            - accounting.settings
      tags:
        - Accounting
      operationId: createItems
      summary: Creates one or more items
      x-hasAccountingValidationError: true
      x-example:
        - purchaseDetails:
          is_object: true
          key: purchaseDetails
          keyPascal: Purchase
          keySnake: purchase_details
        - cOGSAccountCode:
          is_last: true
          key: cOGSAccountCode
          keyPascal: CoGSAccountCode
          keySnake: cogs_account_code
          keyCsharp: COGSAccountCode
          default: 500
          object: purchaseDetails
        - item:
          is_object: true
          key: item
          keyPascal: Item
        - code:
          key: code
          keyPascal: Code
          default: abcXYZ123
          object: item
        - name:
          key: name
          keyPascal: Name
          default: HelloWorld
          object: item
        - description:
          key: description
          keyPascal: Description
          default: Foobar
          object: item
        - inventoryAssetAccountCode:
          key: inventoryAssetAccountCode
          keyPascal: InventoryAssetAccountCode
          keySnake: inventory_asset_account_code
          default: 140
          object: item
        - set_purchaseDetails:
          is_last: true
          is_variable: true
          nonString: true
          key: purchaseDetails
          keyPascal: PurchaseDetails
          keySnake: purchase_details
          default: purchaseDetails
          python: purchase_details
          ruby: purchase_details
          object: item
        - items:
          is_object: true
          key: items
          keyPascal: Items
        - add_item:
          is_last: true
          is_array_add: true
          key: items
          keyPascal: Items
          java: Items
          csharp: Item
          object: item
      parameters:
        - $ref: "#/components/parameters/summarizeErrors"
        - $ref: "#/components/parameters/unitdp"
        - $ref: "#/components/parameters/idempotencyKey"
      responses:
        "200":
          description: Success - return response of type Items array with newly created Item
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items"
              example:
                Id: ae7ef7c8-9024-4d42-8d59-5f26ed3f508b
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1552331871904)/
                Items:
                  - ItemID: a4544d51-48f6-441f-a623-99ecbced6ab7
                    Code: abc65591
                    Description: foobar
                    UpdatedDateUTC: /Date(1552331871707)/
                    PurchaseDetails: {}
                    SalesDetails: {}
                    Name: Hello11350
                    IsTrackedAsInventory: false
                    IsSold: true
                    IsPurchased: true
                    ValidationErrors:
                      - Message: Price List Item with Code ''abc'' already exists
        "400":
          $ref: "#/components/responses/400Error"
      requestBody:
        required: true
        description: Items with an array of Item objects in body of request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Items"
            example:
              Items:
                - Code: code123
                  Name: Item Name XYZ
                  Description: Foobar
                  InventoryAssetAccountCode: "140"
                  PurchaseDetails:
                    COGSAccountCode: "500"
    post:
      security:
        - OAuth2:
            - accounting.settings
      tags:
        - Accounting
      operationId: updateOrCreateItems
      summary: Updates or creates one or more items
      x-hasAccountingValidationError: true
      x-example:
        - item:
          is_object: true
          key: item
          keyPascal: Item
        - code:
          key: code
          keyPascal: Code
          default: abcXYZ123
          object: item
        - name:
          key: name
          keyPascal: Name
          default: HelloWorld
          object: item
        - description:
          is_last: true
          key: description
          keyPascal: Description
          default: Foobar
          object: item
        - items:
          is_object: true
          key: items
          keyPascal: Items
        - add_item:
          is_last: true
          is_array_add: true
          key: items
          keyPascal: Items
          java: Items
          csharp: Item
          object: item
      parameters:
        - $ref: "#/components/parameters/summarizeErrors"
        - $ref: "#/components/parameters/unitdp"
        - $ref: "#/components/parameters/idempotencyKey"
      responses:
        "200":
          description: Success - return response of type Items array with newly created Item
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items"
              example:
                Id: ae7ef7c8-9024-4d42-8d59-5f26ed3f508b
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1552331871904)/
                Items:
                  - ItemID: a4544d51-48f6-441f-a623-99ecbced6ab7
                    Code: abc65591
                    Description: foobar
                    UpdatedDateUTC: /Date(1552331871707)/
                    PurchaseDetails: {}
                    SalesDetails: {}
                    Name: Hello11350
                    IsTrackedAsInventory: false
                    IsSold: true
                    IsPurchased: true
                    ValidationErrors:
                      - Message: Price List Item with Code ''abc'' already exists
        "400":
          $ref: "#/components/responses/400Error"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Items"
            example:
              Items:
                - Code: ItemCode123
                  Name: ItemName XYZ
                  Description: Item Description ABC
  /Items/{ItemID}:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.settings
            - accounting.settings.read
      tags:
        - Accounting
      operationId: getItem
      summary: Retrieves a specific item using a unique item Id
      parameters:
        - $ref: "#/components/parameters/ItemID"
        - $ref: "#/components/parameters/unitdp"
      responses:
        "200":
          description: Success - return response of type Items array with specified Item
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items"
              example:
                Id: 0bbd8a92-9ba7-4711-8040-8d6a609ca7e8
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1552333420160)/
                Items:
                  - ItemID: c8c54d65-f3f2-452d-926e-bf450b12fb07
                    Code: "123"
                    Description: Guitars Fender Strat
                    PurchaseDescription: Brand new Fender Strats
                    UpdatedDateUTC: /Date(1552333309387+0000)/
                    PurchaseDetails:
                      UnitPrice: 2500.0000
                      COGSAccountCode: "310"
                      TaxType: INPUT2
                    SalesDetails:
                      UnitPrice: 5000.0000
                      AccountCode: "200"
                      TaxType: OUTPUT2
                    Name: Guitars
                    IsTrackedAsInventory: true
                    InventoryAssetAccountCode: "630"
                    TotalCostPool: 25000.00
                    QuantityOnHand: 10.0000
                    IsSold: true
                    IsPurchased: true
                    ValidationErrors: []
    post:
      security:
        - OAuth2:
            - accounting.settings
      tags:
        - Accounting
      operationId: updateItem
      summary: Updates a specific item
      x-hasAccountingValidationError: true
      x-example:
        - item:
          is_object: true
          key: item
          keyPascal: Item
        - code:
          key: code
          keyPascal: Code
          default: ItemCode123
          object: item
        - description:
          is_last: true
          key: description
          keyPascal: Description
          default: Goodbye
          object: item
        - items:
          is_object: true
          key: items
          keyPascal: Items
        - add_item:
          is_last: true
          is_array_add: true
          key: items
          keyPascal: Items
          java: Items
          csharp: Item
          object: item
      parameters:
        - $ref: "#/components/parameters/ItemID"
        - $ref: "#/components/parameters/unitdp"
        - $ref: "#/components/parameters/idempotencyKey"
      responses:
        "200":
          description: Success - return response of type Items array with updated Item
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items"
              example:
                Id: 24feb629-6b14-499e-9aa1-fc2c596c0280
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1552332558975)/
                Items:
                  - ItemID: a7e87086-e0ae-4df2-83d7-e26e9a6b7786
                    Code: abc38306
                    Description: Hello Xero
                    UpdatedDateUTC: /Date(1552332558924)/
                    PurchaseDetails: {}
                    SalesDetails: {}
                    Name: Hello8746
                    IsTrackedAsInventory: false
                    IsSold: true
                    IsPurchased: true
                    ValidationErrors: []
        "400":
          $ref: "#/components/responses/400Error"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Items"
            example:
              Items:
                - Code: ItemCode123
                  Description: Description 123
    delete:
      security:
        - OAuth2:
            - accounting.settings
      tags:
        - Accounting
      operationId: deleteItem
      summary: Deletes a specific item
      parameters:
        - $ref: "#/components/parameters/ItemID"
      responses:
        "204":
          description: Success - return response 204 no content
          x-isEmpty: true
        "400":
          $ref: "#/components/responses/400Error"
  /Items/{ItemID}/History:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.settings
            - accounting.settings.read
      tags:
        - Accounting
      operationId: getItemHistory
      summary: Retrieves history for a specific item
      parameters:
        - $ref: "#/components/parameters/ItemID"
      responses:
        "200":
          $ref: "#/components/responses/HistoryRetrieved"
    put:
      security:
        - OAuth2:
            - accounting.settings
      tags:
        - Accounting
      operationId: createItemHistory
      summary: Creates a history record for a specific item
      x-hasAccountingValidationError: true
      x-example:
        - historyRecord:
          is_object: true
          key: historyRecord
          keyPascal: HistoryRecord
          keySnake: history_record
        - Details:
          is_last: true
          key: details
          keyPascal: Details
          default: Hello World
          object: historyRecord
        - historyRecords:
          is_object: true
          key: historyRecords
          keyPascal: HistoryRecords
        - add_historyRecord:
          is_last: true
          is_array_add: true
          key: historyRecords
          keyPascal: HistoryRecords
          keySnake: history_records
          java: HistoryRecords
          python: history_record
          ruby: history_record
          csharp: HistoryRecord
          object: historyRecord
      parameters:
        - $ref: "#/components/parameters/idempotencyKey"
        - $ref: "#/components/parameters/ItemID"
      responses:
        "200":
          $ref: "#/components/responses/HistoryRecordCreated"
      requestBody:
        $ref: "#/components/requestBodies/historyRecords"
  /Payments:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.transactions
            - accounting.transactions.read
      tags:
        - Accounting
      operationId: getPayments
      summary: Retrieves payments for invoices and credit notes
      parameters:
        - $ref: "#/components/parameters/ifModifiedSince"
        - in: query
          name: where
          description: Filter by an any element
          example: Status=="AUTHORISED"
          x-example-csharp: Status==\"AUTHORISED\"
          x-example-java: Status==&quot;&apos; + Payment.StatusEnum.AUTHORISED + &apos;&quot;
          x-example-php: Status==&quot;&apos; . \XeroAPI\XeroPHP\Models\Accounting\Payment::STATUS_AUTHORISED . &apos;&quot;
          x-example-ruby: Status==#{XeroRuby::Accounting::Payment::AUTHORISED}
          schema:
            type: string
        - in: query
          name: order
          description: Order by an any element
          example: Amount ASC
          schema:
            type: string
        - in: query
          name: page
          description: Up to 100 payments will be returned in a single API call
          example: 1
          schema:
            type: integer
        - $ref: "#/components/parameters/pageSize"
      responses:
        "200":
          description: Success - return response of type Payments array for all Payments
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payments"
              example:
                Id: 9f310473-e1b5-4704-a25c-eec653deb596
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1552431874205)/
                pagination:
                  page: 1
                  pageSize: 100
                  pageCount: 1
                  itemCount: 2
                Payments:
                  - PaymentID: 99ea7f6b-c513-4066-bc27-b7c65dcd76c2
                    BatchPaymentID: b54aa50c-794c-461b-89d1-846e1b84d9c0
                    BatchPayment:
                      Account:
                        AccountID: 5690f1e8-1d02-4893-90c2-ee1a69eff942
                      BatchPaymentID: b54aa50c-794c-461b-89d1-846e1b84d9c0
                      Date: /Date(1552521600000+0000)/
                      Type: RECBATCH
                      Status: AUTHORISED
                      TotalAmount: "50.00"
                      UpdatedDateUTC: /Date(1541176592690+0000)/
                      IsReconciled: "false"
                    Date: /Date(1543449600000+0000)/
                    BankAmount: 46.00
                    Amount: 46.00
                    Reference: ""
                    CurrencyRate: 1.000000
                    PaymentType: ACCRECPAYMENT
                    Status: AUTHORISED
                    UpdatedDateUTC: /Date(1541176592690+0000)/
                    HasAccount: true
                    IsReconciled: false
                    Account:
                      AccountID: 5690f1e8-1d02-4893-90c2-ee1a69eff942
                      Code: "970"
                    Invoice:
                      Type: ACCREC
                      InvoiceID: 046d8a6d-1ae1-4b4d-9340-5601bdf41b87
                      InvoiceNumber: INV-0002
                      Payments: []
                      CreditNotes: []
                      Prepayments: []
                      Overpayments: []
                      HasErrors: false
                      IsDiscounted: false
                      Contact:
                        ContactID: a3675fc4-f8dd-4f03-ba5b-f1870566bcd7
                        ContactNumber: ""
                        Name: Barney Rubble-83203
                        Addresses: []
                        Phones: []
                        ContactGroups: []
                        ContactPersons: []
                        HasValidationErrors: false
                      LineItems: []
                      CurrencyCode: NZD
                    HasValidationErrors: false
                  - PaymentID: 6b037c9b-2e5d-4905-84d3-eabfb3438242
                    Date: /Date(1552521600000+0000)/
                    BankAmount: 2.00
                    Amount: 2.00
                    Reference: Too much
                    CurrencyRate: 1.000000
                    PaymentType: ARCREDITPAYMENT
                    Status: AUTHORISED
                    UpdatedDateUTC: /Date(1551812346173+0000)/
                    HasAccount: true
                    IsReconciled: false
                    Account:
                      AccountID: 136ebd08-60ea-4592-8982-be92c153b53a
                      Code: "980"
                    Invoice:
                      Type: ACCRECCREDIT
                      InvoiceID: 249f15fa-f2a7-4acc-8769-0984103f2225
                      InvoiceNumber: CN-0005
                      Payments: []
                      CreditNotes: []
                      Prepayments: []
                      Overpayments: []
                      HasErrors: false
                      IsDiscounted: false
                      Contact:
                        ContactID: 430fa14a-f945-44d3-9f97-5df5e28441b8
                        ContactNumber: ""
                        Name: Liam Gallagher
                        Addresses: []
                        Phones: []
                        ContactGroups: []
                        ContactPersons: []
                        HasValidationErrors: false
                      LineItems: []
                      CurrencyCode: NZD
                    HasValidationErrors: false
    put:
      security:
        - OAuth2:
            - accounting.transactions
      tags:
        - Accounting
      operationId: createPayments
      summary: Creates multiple payments for invoices or credit notes
      x-hasAccountingValidationError: true
      x-example:
        - dateValue:
          is_date: true
          key: dateValue
          keyPascal: Date
          keySnake: date_value
          java_datatype: LocalDate
          default: LocalDate.of(2020, Month.OCTOBER, 10)
          java: LocalDate.now()
          csharp: DateTime.Now
          php: new DateTime('2020-10-10')
          node: "'2020-10-10'"
          python: dateutil.parser.parse('2020-10-10T00:00:00Z')
          ruby: "'YYYY-MM-DD'"
        - invoice:
          is_object: true
          key: invoice
          keyPascal: Invoice
        - invoiceID:
          is_last: true
          is_uuid: true
          key: invoiceID
          keyPascal: InvoiceID
          keySnake: invoice_id
          default: 00000000-0000-0000-0000-000000000000
          object: invoice
        - account:
          is_object: true
          key: account
          keyPascal: Account
        - accountID:
          is_last: true
          is_uuid: true
          key: accountID
          keyPascal: AccountID
          keySnake: account_id
          default: 00000000-0000-0000-0000-000000000000
          object: account
        - payment:
          is_object: true
          key: payment
          keyPascal: Payment
        - set_invoice:
          is_variable: true
          nonString: true
          key: invoice
          keyPascal: Invoice
          default: invoice
          object: payment
        - set_account:
          is_variable: true
          nonString: true
          key: account
          keyPascal: Account
          default: account
          object: payment
        - amount:
          nonString: true
          key: amount
          keyPascal: Amount
          default: 1.0
          is_money: true
          object: payment
        - date:
          is_last: true
          is_variable: true
          nonString: true
          key: date
          keyPascal: Date
          default: dateValue
          python: date_value
          ruby: date_value
          object: payment
        - payments:
          is_object: true
          key: payments
          keyPascal: Payments
        - add_payment:
          is_last: true
          is_array_add: true
          key: payments
          keyPascal: Payments
          java: Payments
          csharp: Payment
          object: payment
      parameters:
        - $ref: "#/components/parameters/summarizeErrors"
        - $ref: "#/components/parameters/idempotencyKey"
      responses:
        "200":
          description: Success - return response of type Payments array for newly created Payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payments"
              example:
                Id: 83b5715a-6a77-4c16-b5b8-2da08b5fde44
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1552432238716)/
                Payments:
                  - PaymentID: 61ed71fc-01bf-4eb8-8419-8a18789ff45f
                    Date: /Date(1552348800000+0000)/
                    BankAmount: 1.00
                    Amount: 1.00
                    CurrencyRate: 1.000000
                    PaymentType: ACCRECPAYMENT
                    Status: AUTHORISED
                    UpdatedDateUTC: /Date(1552432238623+0000)/
                    HasAccount: true
                    IsReconciled: false
                    Account:
                      AccountID: 5690f1e8-1d02-4893-90c2-ee1a69eff942
                      Code: "970"
                      Name: Owner A Funds Introduced
                    Invoice:
                      Type: ACCREC
                      InvoiceID: c7c37b83-ac95-45ea-88ba-8ad83a5f22fe
                      InvoiceNumber: INV-0004
                      Reference: ""
                      Prepayments: []
                      Overpayments: []
                      AmountDue: 229.00
                      AmountPaid: 1.00
                      SentToContact: false
                      CurrencyRate: 1.000000
                      HasErrors: false
                      IsDiscounted: false
                      Contact:
                        ContactID: a3675fc4-f8dd-4f03-ba5b-f1870566bcd7
                        Name: Barney Rubble-83203
                        ContactPersons: []
                        HasValidationErrors: false
                      DateString: 2018-10-10T00:00:00
                      Date: /Date(1539129600000+0000)/
                      DueDateString: 2018-10-18T00:00:00
                      DueDate: /Date(1539820800000+0000)/
                      Status: AUTHORISED
                      LineAmountTypes: Exclusive
                      LineItems:
                        - Description: boo
                          UnitAmount: 200.00
                          TaxType: OUTPUT2
                          TaxAmount: 30.00
                          LineAmount: 200.00
                          AccountCode: "200"
                          Tracking: []
                          Quantity: 1.0000
                          LineItemID: 173dfdb9-43b5-4bd2-ae25-9419e662a3a7
                          ValidationErrors: []
                      SubTotal: 200.00
                      TotalTax: 30.00
                      Total: 230.00
                      UpdatedDateUTC: /Date(1552432238623+0000)/
                      CurrencyCode: NZD
                    HasValidationErrors: true
                    ValidationErrors:
                      - Message: Payment amount exceeds the amount outstanding on this document
        "400":
          $ref: "#/components/responses/400Error"
      requestBody:
        required: true
        description: Payments array with Payment object in body of request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Payments"
            example:
              Payments:
                - Invoice:
                    LineItems: []
                    InvoiceID: 00000000-0000-0000-0000-000000000000
                  Account:
                    Code: "970"
                  Date: "2019-03-12"
                  Amount: 1
    post:
      security:
        - OAuth2:
            - accounting.transactions
      tags:
        - Accounting
      operationId: createPayment
      summary: Creates a single payment for invoice or credit notes
      parameters:
        - $ref: "#/components/parameters/idempotencyKey"
      x-hasAccountingValidationError: true
      x-example:
        - dateValue:
          is_date: true
          key: dateValue
          keyPascal: Date
          keySnake: date_value
          java_datatype: LocalDate
          default: LocalDate.of(2020, Month.OCTOBER, 10)
          java: LocalDate.now()
          csharp: DateTime.Now
          php: new DateTime('2020-10-10')
          node: "'2020-10-10'"
          python: dateutil.parser.parse('2020-10-10T00:00:00Z')
          ruby: "'YYYY-MM-DD'"
        - invoice:
          is_object: true
          key: invoice
          keyPascal: Invoice
        - invoiceID:
          is_last: true
          is_uuid: true
          key: invoiceID
          keyPascal: InvoiceID
          keySnake: invoice_id
          default: 00000000-0000-0000-0000-000000000000
          object: invoice
        - account:
          is_object: true
          key: account
          keyPascal: Account
        - accountID:
          is_last: true
          is_uuid: true
          key: accountID
          keyPascal: AccountID
          keySnake: account_id
          default: 00000000-0000-0000-0000-000000000000
          object: account
        - payment:
          is_object: true
          key: payment
          keyPascal: Payment
        - set_invoice:
          is_variable: true
          nonString: true
          key: invoice
          keyPascal: Invoice
          default: invoice
          object: payment
        - set_account:
          is_variable: true
          nonString: true
          key: account
          keyPascal: Account
          default: account
          object: payment
        - amount:
          nonString: true
          key: amount
          keyPascal: Amount
          default: 1.0
          is_money: true
          object: payment
        - date:
          is_last: true
          is_variable: true
          nonString: true
          key: date
          keyPascal: Date
          default: dateValue
          python: date_value
          ruby: date_value
          object: payment
        - payments:
          is_object: true
          key: payments
          keyPascal: Payments
        - add_payment:
          is_last: true
          is_array_add: true
          key: payments
          keyPascal: Payments
          java: Payments
          csharp: Payment
          object: payment
      responses:
        "200":
          description: Success - return response of type Payments array for newly created Payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payments"
              example:
                Id: 83b5715a-6a77-4c16-b5b8-2da08b5fde44
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1552432238716)/
                Payments:
                  - PaymentID: 61ed71fc-01bf-4eb8-8419-8a18789ff45f
                    Date: /Date(1552348800000+0000)/
                    BankAmount: 1.00
                    Amount: 1.00
                    CurrencyRate: 1.000000
                    PaymentType: ACCRECPAYMENT
                    Status: AUTHORISED
                    UpdatedDateUTC: /Date(1552432238623+0000)/
                    HasAccount: true
                    IsReconciled: false
                    Account:
                      AccountID: 5690f1e8-1d02-4893-90c2-ee1a69eff942
                      Code: "970"
                      Name: Owner A Funds Introduced
                    Invoice:
                      Type: ACCREC
                      InvoiceID: c7c37b83-ac95-45ea-88ba-8ad83a5f22fe
                      InvoiceNumber: INV-0004
                      Reference: ""
                      Prepayments: []
                      Overpayments: []
                      AmountDue: 229.00
                      AmountPaid: 1.00
                      SentToContact: false
                      CurrencyRate: 1.000000
                      HasErrors: false
                      IsDiscounted: false
                      Contact:
                        ContactID: a3675fc4-f8dd-4f03-ba5b-f1870566bcd7
                        Name: Barney Rubble-83203
                        ContactPersons: []
                        HasValidationErrors: false
                      DateString: 2018-10-10T00:00:00
                      Date: /Date(1539129600000+0000)/
                      DueDateString: 2018-10-18T00:00:00
                      DueDate: /Date(1539820800000+0000)/
                      Status: AUTHORISED
                      LineAmountTypes: Exclusive
                      LineItems:
                        - Description: boo
                          UnitAmount: 200.00
                          TaxType: OUTPUT2
                          TaxAmount: 30.00
                          LineAmount: 200.00
                          AccountCode: "200"
                          Tracking: []
                          Quantity: 1.0000
                          LineItemID: 173dfdb9-43b5-4bd2-ae25-9419e662a3a7
                          ValidationErrors: []
                      SubTotal: 200.00
                      TotalTax: 30.00
                      Total: 230.00
                      UpdatedDateUTC: /Date(1552432238623+0000)/
                      CurrencyCode: NZD
                    HasValidationErrors: true
                    ValidationErrors:
                      - Message: Payment amount exceeds the amount outstanding on this document
        "400":
          $ref: "#/components/responses/400Error"
      requestBody:
        required: true
        description: Request body with a single Payment object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Payment"
            example:
              Payments:
                - Invoice:
                    LineItems: []
                    InvoiceID: 00000000-0000-0000-0000-000000000000
                  Account:
                    Code: "970"
                  Date: "2019-03-12"
                  Amount: 1
  /Payments/{PaymentID}:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.transactions
            - accounting.transactions.read
      tags:
        - Accounting
      operationId: getPayment
      summary: Retrieves a specific payment for invoices and credit notes using a unique payment Id
      parameters:
        - $ref: "#/components/parameters/PaymentID"
      responses:
        "200":
          description: Success - return response of type Payments array for specified Payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payments"
              example:
                Id: 4876f9ee-3a17-47d8-8c1b-84377c8f2998
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1552431874852)/
                Payments:
                  - PaymentID: 99ea7f6b-c513-4066-bc27-b7c65dcd76c2
                    BatchPaymentID: b54aa50c-794c-461b-89d1-846e1b84d9c0
                    BatchPayment:
                      Account:
                        AccountID: 5690f1e8-1d02-4893-90c2-ee1a69eff942
                      BatchPaymentID: b54aa50c-794c-461b-89d1-846e1b84d9c0
                      Date: /Date(1543449600000+0000)/
                      Type: RECBATCH
                      Status: AUTHORISED
                      TotalAmount: "50.00"
                      UpdatedDateUTC: /Date(1541176592690+0000)/
                      IsReconciled: "false"
                    Date: /Date(1543449600000+0000)/
                    BankAmount: 46.00
                    Amount: 46.00
                    CurrencyRate: 1.000000
                    PaymentType: ACCRECPAYMENT
                    Status: AUTHORISED
                    UpdatedDateUTC: /Date(1541176592690+0000)/
                    HasAccount: true
                    IsReconciled: false
                    Account:
                      AccountID: 5690f1e8-1d02-4893-90c2-ee1a69eff942
                      Code: "970"
                      Name: Owner A Funds Introduced
                    Invoice:
                      Type: ACCREC
                      InvoiceID: 046d8a6d-1ae1-4b4d-9340-5601bdf41b87
                      InvoiceNumber: INV-0002
                      Reference: Red Fish, Blue Fish
                      Payments:
                        - PaymentID: 99ea7f6b-c513-4066-bc27-b7c65dcd76c2
                          Date: /Date(1543449600000+0000)/
                          Amount: 46.00
                          CurrencyRate: 1.000000
                          HasAccount: false
                          HasValidationErrors: false
                      Prepayments: []
                      Overpayments: []
                      AmountDue: 0.00
                      AmountPaid: 46.00
                      SentToContact: true
                      CurrencyRate: 1.000000
                      HasErrors: false
                      IsDiscounted: false
                      Contact:
                        ContactID: a3675fc4-f8dd-4f03-ba5b-f1870566bcd7
                        Name: Barney Rubble-83203
                        ContactPersons: []
                        HasValidationErrors: false
                      DateString: 2018-10-20T00:00:00
                      Date: /Date(1539993600000+0000)/
                      DueDateString: 2018-12-30T00:00:00
                      DueDate: /Date(1546128000000+0000)/
                      Status: PAID
                      LineAmountTypes: Exclusive
                      LineItems:
                        - Description: Acme Tires
                          UnitAmount: 20.00
                          TaxType: OUTPUT2
                          TaxAmount: 6.00
                          LineAmount: 40.00
                          AccountCode: "200"
                          Tracking: []
                          Quantity: 2.0000
                          LineItemID: 878d1688-a905-4866-ae91-5a772c2540c7
                          ValidationErrors: []
                      SubTotal: 40.00
                      TotalTax: 6.00
                      Total: 46.00
                      UpdatedDateUTC: /Date(1541176592690+0000)/
                      CurrencyCode: NZD
                      FullyPaidOnDate: /Date(1543449600000+0000)/
                    HasValidationErrors: false
    post:
      security:
        - OAuth2:
            - accounting.transactions
      tags:
        - Accounting
      operationId: deletePayment
      summary: Updates a specific payment for invoices and credit notes
      x-hasAccountingValidationError: true
      x-example:
        - paymentDelete:
          is_object: true
          key: paymentDelete
          keyPascal: PaymentDelete
        - status:
          is_last: true
          key: status
          keyPascal: Status
          default: DELETED
          object: paymentDelete
      parameters:
        - $ref: "#/components/parameters/idempotencyKey"
        - $ref: "#/components/parameters/PaymentID"
      responses:
        "200":
          description: Success - return response of type Payments array for updated Payment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payments"
              example:
                Id: ee23328c-4a8b-4ee7-8fb6-9796ffab9cb0
                Status: OK
                ProviderName: provider-name
                DateTimeUTC: /Date(1583945852489)/
                Payments:
                  - PaymentID: c94c996b-1ab3-4ff3-ad19-1cdc77f30817
                    Date: /Date(1567382400000+0000)/
                    BankAmount: 2.00
                    Amount: 2.00
                    Reference: foobar
                    CurrencyRate: 1.000000
                    PaymentType: APCREDITPAYMENT
                    Status: DELETED
                    UpdatedDateUTC: /Date(1583945852373+0000)/
                    HasAccount: true
                    IsReconciled: false
                    Account:
                      AccountID: 57f261f0-e32d-4a7f-be82-22cd992c6367
                      Code: "033"
                      Name: Checking account
                    Invoice:
                      Type: ACCPAYCREDIT
                      InvoiceID: dba68ebc-c05a-4e2d-b97d-964349e5b8d6
                      InvoiceNumber: ""
                      Reference: ""
                      Prepayments: []
                      Overpayments: []
                      AmountDue: 22.00
                      AmountPaid: 0.00
                      SentToContact: false
                      CurrencyRate: 1.000000
                      IsDiscounted: false
                      HasErrors: false
                      Contact:
                        ContactID: 216830cb-9a68-487e-928b-c1a7ccc4fc81
                        Name: FooBar73005
                        ContactPersons: []
                        HasValidationErrors: false
                      DateString: 2017-01-02T00:00:00
                      Date: /Date(1483315200000+0000)/
                      Status: AUTHORISED
                      LineAmountTypes: Exclusive
                      LineItems:
                        - Description: Sample Item72716
                          UnitAmount: 20.00
                          TaxType: INPUT
                          TaxAmount: 2.00
                          LineAmount: 20.00
                          AccountCode: "400"
                          Tracking: []
                          Quantity: 1.0000
                          ValidationErrors: []
                      SubTotal: 20.00
                      TotalTax: 2.00
                      Total: 22.00
                      UpdatedDateUTC: /Date(1583945852363+0000)/
                      CurrencyCode: AUD
                    HasValidationErrors: false
        "400":
          $ref: "#/components/responses/400Error"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentDelete"
            example:
              Payments:
                - Status: DELETED
  /Payments/{PaymentID}/History:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.transactions
            - accounting.transactions.read
      tags:
        - Accounting
      operationId: getPaymentHistory
      summary: Retrieves history records of a specific payment
      parameters:
        - $ref: "#/components/parameters/PaymentID"
      responses:
        "200":
          $ref: "#/components/responses/HistoryRetrieved"
    put:
      security:
        - OAuth2:
            - accounting.transactions
      tags:
        - Accounting
      operationId: createPaymentHistory
      summary: Creates a history record for a specific payment
      x-hasAccountingValidationError: true
      x-example:
        - historyRecord:
          is_object: true
          key: historyRecord
          keyPascal: HistoryRecord
          keySnake: history_record
        - Details:
          is_last: true
          key: details
          keyPascal: Details
          default: Hello World
          object: historyRecord
        - historyRecords:
          is_object: true
          key: historyRecords
          keyPascal: HistoryRecords
        - add_historyRecord:
          is_last: true
          is_array_add: true
          key: historyRecords
          keyPascal: HistoryRecords
          keySnake: history_records
          java: HistoryRecords
          python: history_record
          ruby: history_record
          csharp: HistoryRecord
          object: historyRecord
      parameters:
        - $ref: "#/components/parameters/idempotencyKey"
        - $ref: "#/components/parameters/PaymentID"
      responses:
        "200":
          $ref: "#/components/responses/HistoryRecordCreated"
        "400":
          description: A failed request due to validation error - API is not able to create HistoryRecord for Payments
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                ErrorNumber: 10
                Type: ValidationException
                Message: A validation exception occurred
                Elements:
                  - DateUTCString: 2019-03-12T22:30:13
                    DateUTC: /Date(1552429813667)/
                    Details: Hello World
                    ValidationErrors:
                      - Message: The document with the supplied id was not found for this endpoint.
      requestBody:
        $ref: "#/components/requestBodies/historyRecords"
  /PaymentServices:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - paymentservices
      tags:
        - Accounting
      operationId: getPaymentServices
      summary: Retrieves payment services
      x-excludeFromPreview: true
      responses:
        "200":
          description: Success - return response of type PaymentServices array for all PaymentService
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentServices"
              example:
                Id: ab82a7dd-5070-4e82-b841-0af52909fe04
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1552488713171)/
                PaymentServices:
                  - PaymentServiceID: 54b3b4f6-0443-4fba-bcd1-61ec0c35ca55
                    PaymentServiceName: PayUpNow
                    PaymentServiceUrl: https://www.payupnow.com/
                    PaymentServiceType: Custom
                    PayNowText: Time To Pay
    put:
      security:
        - OAuth2:
            - paymentservices
      tags:
        - Accounting
      operationId: createPaymentService
      summary: Creates a payment service
      parameters:
        - $ref: "#/components/parameters/idempotencyKey"
      x-excludeFromPreview: true
      x-hasAccountingValidationError: true
      x-example:
        - object:
          is_object: true
          key: paymentService
          keyPascal: PaymentService
          keySnake: payment_service
        - paymentServiceName:
          key: paymentServiceName
          keyPascal: PaymentServiceName
          keySnake: payment_service_name
          default: ACME Payments
          object: paymentService
        - paymentServiceUrl:
          key: paymentServiceUrl
          keyPascal: PaymentServiceUrl
          keySnake: payment_service_url
          default: https://www.payupnow.com/
          object: paymentService
        - payNowText:
          is_last: true
          key: payNowText
          keyPascal: PayNowText
          keySnake: pay_now_text
          default: Pay Now
          object: paymentService
        - paymentServices:
          is_object: true
          key: paymentServices
          keyPascal: PaymentServices
        - add_paymentService:
          is_last: true
          is_array_add: true
          key: paymentServices
          keyPascal: PaymentServices
          java: PaymentServices
          csharp: PaymentService
          object: paymentService
      responses:
        "200":
          description: Success - return response of type PaymentServices array for newly created PaymentService
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentServices"
              example:
                Id: 7ed8b3c0-2155-49ee-a583-f2dce6607dfb
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1552488712813)/
                PaymentServices:
                  - PaymentServiceID: 54b3b4f6-0443-4fba-bcd1-61ec0c35ca55
                    PaymentServiceName: PayUpNow
                    PaymentServiceUrl: https://www.payupnow.com/
                    PaymentServiceType: Custom
                    PayNowText: Time To Pay
                    ValidationErrors:
                      - Message: Payment service could not be found
        "400":
          $ref: "#/components/responses/400Error"
      requestBody:
        required: true
        description: PaymentServices array with PaymentService object in body of request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentServices"
            example:
              PaymentServices:
                - PaymentServiceName: PayUpNow
                  PaymentServiceUrl: https://www.payupnow.com/
                  PayNowText: Time To Pay
  /Prepayments:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.transactions
            - accounting.transactions.read
      tags:
        - Accounting
      operationId: getPrepayments
      summary: Retrieves prepayments
      parameters:
        - $ref: "#/components/parameters/ifModifiedSince"
        - in: query
          name: where
          description: Filter by an any element
          example: Status=="AUTHORISED"
          x-example-csharp: Status==\"AUTHORISED\"
          x-example-java: Status==&quot;&apos; + Prepayment.StatusEnum.AUTHORISED + &apos;&quot;
          x-example-php: Status==&quot;&apos; . \XeroAPI\XeroPHP\Models\Accounting\Prepayment::STATUS_AUTHORISED . &apos;&quot;
          x-example-ruby: Status==#{XeroRuby::Accounting::Prepayment::AUTHORISED}
          schema:
            type: string
        - in: query
          name: order
          description: Order by an any element
          example: Reference ASC
          schema:
            type: string
        - in: query
          name: page
          description: e.g. page=1 – Up to 100 prepayments will be returned in a single API call with line items shown for each overpayment
          example: 1
          schema:
            type: integer
        - $ref: "#/components/parameters/unitdp"
        - $ref: "#/components/parameters/pageSize"
      responses:
        "200":
          description: Success - return response of type Prepayments array for all Prepayment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Prepayments"
              example:
                Id: d7a9ca0c-6159-4c26-ad2e-715440c50b7d
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1552489227595)/
                pagination:
                  page: 1
                  pageSize: 100
                  pageCount: 1
                  itemCount: 1
                Prepayments:
                  - PrepaymentID: ce0cddef-cf5a-4e59-b638-f225679115a7
                    ID: ce0cddef-cf5a-4e59-b638-f225679115a7
                    Type: RECEIVE-PREPAYMENT
                    Reference: INV-0011
                    RemainingCredit: 3450.00
                    Allocations: []
                    Payments: []
                    HasAttachments: true
                    Contact:
                      ContactID: be392c72-c121-4f83-9512-03ac71e54c20
                      Name: Luke Skywalker
                      Addresses: []
                      Phones: []
                      ContactGroups: []
                      ContactPersons: []
                      HasValidationErrors: false
                    DateString: 2019-03-13T00:00:00
                    Date: /Date(1552435200000+0000)/
                    Status: AUTHORISED
                    LineAmountTypes: Exclusive
                    LineItems: []
                    SubTotal: 3000.00
                    TotalTax: 450.00
                    Total: 3450.00
                    UpdatedDateUTC: /Date(1552489187730+0000)/
                    CurrencyCode: NZD
  /Prepayments/{PrepaymentID}:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    get:
      security:
        - OAuth2:
            - accounting.transactions
            - accounting.transactions.read
      tags:
        - Accounting
      operationId: getPrepayment
      summary: Allows you to retrieve a specified prepayments
      parameters:
        - $ref: "#/components/parameters/PrepaymentID"
      responses:
        "200":
          description: Success - return response of type Prepayments array for a specified Prepayment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Prepayments"
              example:
                Id: 18e5f578-ef28-4096-a7aa-d06d65574b99
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1553540376847)/
                Prepayments:
                  - PrepaymentID: ce0cddef-cf5a-4e59-b638-f225679115a7
                    ID: ce0cddef-cf5a-4e59-b638-f225679115a7
                    CurrencyRate: 1.000000
                    Type: RECEIVE-PREPAYMENT
                    Reference: INV-0011
                    RemainingCredit: 3449.00
                    Allocations:
                      - Amount: 1.00
                        Date: /Date(1552435200000+0000)/
                        Invoice:
                          InvoiceID: c7c37b83-ac95-45ea-88ba-8ad83a5f22fe
                          InvoiceNumber: INV-0004
                          Payments: []
                          CreditNotes: []
                          Prepayments: []
                          Overpayments: []
                          HasErrors: false
                          IsDiscounted: false
                          LineItems: []
                    Payments: []
                    HasAttachments: true
                    Attachments:
                      - AttachmentID: 2ca06aa0-3629-474a-9401-553d4b7fa9b0
                        FileName: giphy.gif
                        Url: https://api.xero.com/api.xro/2.0/banktransaction/ce0cddef-cf5a-4e59-b638-f225679115a7/Attachments/giphy.gif
                        MimeType: image/gif
                        ContentLength: 495727
                    Contact:
                      ContactID: be392c72-c121-4f83-9512-03ac71e54c20
                      ContactStatus: ACTIVE
                      Name: Luke Skywalker
                      EmailAddress: ""
                      BankAccountDetails: ""
                      Addresses:
                        - AddressType: STREET
                          City: ""
                          Region: ""
                          PostalCode: ""
                          Country: ""
                        - AddressType: POBOX
                          City: ""
                          Region: ""
                          PostalCode: ""
                          Country: ""
                      Phones:
                        - PhoneType: DEFAULT
                          PhoneNumber: ""
                          PhoneAreaCode: ""
                          PhoneCountryCode: ""
                        - PhoneType: DDI
                          PhoneNumber: ""
                          PhoneAreaCode: ""
                          PhoneCountryCode: ""
                        - PhoneType: FAX
                          PhoneNumber: ""
                          PhoneAreaCode: ""
                          PhoneCountryCode: ""
                        - PhoneType: MOBILE
                          PhoneNumber: ""
                          PhoneAreaCode: ""
                          PhoneCountryCode: ""
                      UpdatedDateUTC: /Date(1552329691573+0000)/
                      ContactGroups: []
                      DefaultCurrency: NZD
                      ContactPersons: []
                      HasValidationErrors: false
                    DateString: 2019-03-13T00:00:00
                    Date: /Date(1552435200000+0000)/
                    Status: AUTHORISED
                    LineAmountTypes: Exclusive
                    LineItems:
                      - Description: Light Speeder
                        UnitAmount: 3000.00
                        TaxType: OUTPUT2
                        TaxAmount: 450.00
                        LineAmount: 3000.00
                        AccountCode: "200"
                        Tracking: []
                        Quantity: 1.0000
                        DiscountEnteredAsPercent: true
                        ValidationErrors: []
                    SubTotal: 3000.00
                    TotalTax: 450.00
                    Total: 3450.00
                    UpdatedDateUTC: /Date(1552522424850+0000)/
                    CurrencyCode: NZD
  /Prepayments/{PrepaymentID}/Allocations:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    put:
      security:
        - OAuth2:
            - accounting.transactions
      tags:
        - Accounting
      operationId: createPrepaymentAllocations
      summary: Allows you to create an Allocation for prepayments
      x-hasAccountingValidationError: true
      x-example:
        - currDate:
          is_date: true
          key: currDate
          keyPascal: CurrDate
          keySnake: curr_date
          java_datatype: LocalDate
          default: LocalDate.now()
          java: LocalDate.now()
          csharp: DateTime.Now
          node: "'2020-12-10'"
          php: new DateTime('2020-12-10')
          python: dateutil.parser.parse('2020-12-03T00:00:00Z')
          ruby: "'YYYY-MM-DD'"
        - invoice:
          is_object: true
          key: invoice
          keyPascal: Invoice
        - invoiceID:
          is_last: true
          is_uuid: true
          key: invoiceID
          keyPascal: InvoiceID
          keySnake: invoice_id
          default: 00000000-0000-0000-0000-000000000000
          object: invoice
        - allocation:
          is_object: true
          key: allocation
          keyPascal: Allocation
        - set_invoice:
          is_variable: true
          nonString: true
          key: invoice
          keyPascal: Invoice
          default: invoice
          object: allocation
        - amount:
          nonString: true
          key: amount
          keyPascal: Amount
          default: 1.0
          is_money: true
          object: allocation
        - date:
          is_last: true
          is_variable: true
          nonString: true
          key: date
          keyPascal: Date
          default: currDate
          python: curr_date
          ruby: curr_date
          object: allocation
        - allocations:
          is_object: true
          key: allocations
          keyPascal: Allocations
        - add_allocation:
          is_last: true
          is_array_add: true
          key: allocations
          keyPascal: Allocations
          java: Allocations
          csharp: Allocation
          object: allocation
      parameters:
        - $ref: "#/components/parameters/PrepaymentID"
        - $ref: "#/components/parameters/summarizeErrors"
        - $ref: "#/components/parameters/idempotencyKey"
      responses:
        "200":
          description: Success - return response of type Allocations array of Allocation for all Prepayment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Allocations"
              example:
                Id: d4758808-d14d-45d5-851a-52787ae5739a
                Status: OK
                ProviderName: Provider Name Example
                DateTimeUTC: /Date(1552522424927)/
                Allocations:
                  - Amount: 1.00
                    Date: /Date(1552435200000+0000)/
                    Invoice:
                      InvoiceID: c7c37b83-ac95-45ea-88ba-8ad83a5f22fe
                      Payments: []
                      CreditNotes: []
                      Prepayments: []
                      Overpayments: []
                      HasErrors: false
                      IsDiscounted: false
                      LineItems: []
                      ValidationErrors: []
                    Prepayment:
                      PrepaymentID: ce0cddef-cf5a-4e59-b638-f225679115a7
                      ID: ce0cddef-cf5a-4e59-b638-f225679115a7
                      LineItems: []
                    ValidationErrors: []
        "400":
          $ref: "#/components/responses/400Error"
      requestBody:
        required: true
        description: Allocations with an array of Allocation object in body of request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Allocations"
            example:
              Allocations:
                - Invoice:
                    LineItems: []
                    InvoiceID: 00000000-0000-0000-0000-000000000000
                  Amount: 1
                  Date: "2019-01-10"
  /Prepayments/{PrepaymentID}/Allocations/{AllocationID}:
    parameters:
      - $ref: "#/components/parameters/requiredHeader"
    delete:
      security:
        - OAuth2:
            - accounting.transactions
      tags:
        - Accounting
      operationId: deletePrepaymentAllocations
      summary: Deletes an Allocation from a Prepayment
      parameters:
        - $ref: "#/components/parameters/PrepaymentID"
        - $ref: "#/components/parameters/AllocationID"
      responses:
        "200":
          description: Success - return response of type Allocation with the isDeleted flag as true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Allocation"
              example:
                AllocationId: 2bb15054-3868-4f85-a9c6-0402ec8c1201
                Date: /Date(1551822670731)/
                Invoice:
                  - InvoiceID: b7eb1fc9-a0f9-4e8e-9373-6689f5350832
                IsDeleted: true
